{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ColumnFilter2 = require('./ColumnFilter');\n\nvar _ColumnFilter3 = _interopRequireDefault(_ColumnFilter2);\n\nvar _CustomDateRangeFilter = require('./CustomDateRangeFilter/CustomDateRangeFilter');\n\nvar _CustomDateRangeFilter2 = _interopRequireDefault(_CustomDateRangeFilter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Custom Date Range Filter\n *\n * A class providing supporting operations to a custom date\n * range filter, extending the column filter base class.\n */\n\n\nvar CustomDateRangeFilter = function (_ColumnFilter) {\n  _inherits(CustomDateRangeFilter, _ColumnFilter);\n\n  function CustomDateRangeFilter() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CustomDateRangeFilter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CustomDateRangeFilter.__proto__ || Object.getPrototypeOf(CustomDateRangeFilter)).call.apply(_ref, [this].concat(args))), _this), _this.getBaseDefault = function () {}, _this.setDefault = function (value) {\n      if (value.values) {\n        var from = new Date(value.values.from);\n        var to = new Date(value.values.to);\n        _this.column.defaultValue = {\n          from: from,\n          to: to\n        };\n      } else {\n        _this.column.defaultValue = _this.getBaseDefault();\n      }\n\n      return _this.column;\n    }, _this.returnFilterItem = function (values) {\n      return {\n        type: 'CustomFilter',\n        value: {\n          key: 'value',\n          type: 'between',\n          values: values\n        }\n      };\n    }, _this.returnBlankFilterItem = function () {\n      return {\n        type: 'CustomFilter',\n        value: ''\n      };\n    }, _this.generateColumnFilter = function (value) {\n      return {\n        key: _this.column.key,\n        type: 'between',\n        value: value\n      };\n    }, _this.getCustomFilter = function (filterHandler, filterOptions) {\n      return _react2.default.createElement(_CustomDateRangeFilter2.default, {\n        onFilter: filterHandler,\n        columnKey: filterOptions.columnKey,\n        defaultValue: filterOptions.defaultValue,\n        getFilter: filterOptions.getFilter\n      });\n    }, _this.getColumnFilterProps = function (defaultValue) {\n      return {\n        type: 'CustomFilter',\n        getElement: _this.getCustomFilter,\n        columnKey: _this.column.key,\n        defaultValue: defaultValue\n      };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * Retrieve the base default value\n   *\n   * @return {object}\n   */\n\n  /**\n   * Set the default value of the column filter\n   *\n   * @param {{values: {to: date, from: date}}|*} value An object containing from and to values.\n   * @return {Object} The updated column object.\n   */\n\n  /**\n   * Return a between values filter item\n   *\n   * @param {mixed} values The values of the filter.\n   * @return {{type: string, value: {key: string, type: string, values: *}}} A filter object item.\n   */\n\n  /**\n   * Return a blank custom filter item\n   *\n   * @return {{type: string, value: string}} A filter object item.\n   */\n\n  /**\n   * Generate a column filter object\n   *\n   * @param {Object} value The value of the custom filter.\n   * @return {{key, type: string, value: *}} A column filter object.\n   */\n\n  /**\n   * Return a Date Range Filter\n   *\n   * @param {Function} filterHandler React-bootstrap-table filter handler.\n   * @param {Object} filterOptions Filter options.\n   * @return {jsx} The Date Range Filter component.\n   */\n\n  /**\n   * Get the column filter properties for displaying\n   *\n   * @param {object} defaultValue The default value of the column filter.\n   * @return {Object} React-bootstrap-table column filter properties.\n   */\n\n\n  return CustomDateRangeFilter;\n}(_ColumnFilter3.default);\n\nexports.default = CustomDateRangeFilter;","map":null,"metadata":{},"sourceType":"script"}