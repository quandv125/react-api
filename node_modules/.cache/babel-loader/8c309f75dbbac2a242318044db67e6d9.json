{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateColumnFilters = exports.getDefaultFilterValues = exports.getFilterValues = exports.getDefaultFilteredColumns = exports.setStorageFilters = exports.setDefaultFilters = exports.setupTableColumns = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _TextFilter = require('./filters/TextFilter');\n\nvar _TextFilter2 = _interopRequireDefault(_TextFilter);\n\nvar _SelectFilter = require('./filters/SelectFilter');\n\nvar _SelectFilter2 = _interopRequireDefault(_SelectFilter);\n\nvar _NumberFilter = require('./filters/NumberFilter');\n\nvar _NumberFilter2 = _interopRequireDefault(_NumberFilter);\n\nvar _CustomDateRangeFilter = require('./filters/CustomDateRangeFilter');\n\nvar _CustomDateRangeFilter2 = _interopRequireDefault(_CustomDateRangeFilter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable no-param-reassign */\n\n/**\n * Setup Data Table Column Filters\n *\n * This function converts each table column setting into a column filter object.\n *\n * @param {Array} tableSettingsColumns The data table table column settings.\n * @return {Object} An object containing key: value column filter objects.\n */\n\n\nvar setupTableColumns = exports.setupTableColumns = function setupTableColumns(tableSettingsColumns) {\n  return tableSettingsColumns.reduce(function (object, column) {\n    switch (column.filter) {\n      case 'SelectFilter':\n        {\n          object[column.key] = new _SelectFilter2.default(column);\n          break;\n        }\n\n      case 'NumberFilter':\n        {\n          object[column.key] = new _NumberFilter2.default(column);\n          break;\n        }\n\n      case 'CustomDateRangeFilter':\n        {\n          object[column.key] = new _CustomDateRangeFilter2.default(column);\n          break;\n        }\n\n      default:\n        {\n          object[column.key] = new _TextFilter2.default(column);\n          break;\n        }\n    }\n\n    return object;\n  }, {});\n};\n/* eslint-enable no-param-reassign */\n\n/**\n * Set the table column default filter values\n *\n * @param {Object} tableColumns An object containing key: value column filter objects.\n * @param {Object} filters An object containing filter type and value pairs.\n */\n\n\nvar setDefaultFilters = exports.setDefaultFilters = function setDefaultFilters(tableColumns, filters) {\n  return Object.entries(tableColumns).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        filter = _ref2[1];\n\n    if (filters && filters[filter.column.key]) {\n      filter.setDefault(filters[key].value);\n    }\n  });\n};\n/**\n * Set Local Storage filters\n *\n * This function takes the column filters, removes any non-searchable columns\n * and creates amended objects {key: { type: 'filterType', value: 'value' },..}.\n * Blank filters will be stored also to override defaults.\n *\n * @param {Object} tableColumns An object containing key: value column filter objects.\n * @param {Object} filters An object containing filter type and value pairs.\n * @return {Object} An object containing amended filter type and value pairs.\n */\n\n\nvar setStorageFilters = exports.setStorageFilters = function setStorageFilters(tableColumns, filters) {\n  return Object.values(tableColumns).filter(function (filter) {\n    return typeof filter.column.searchable === 'undefined' || filter.column.searchable !== false;\n  }).reduce(function (object, filter) {\n    if (typeof filters[filter.column.key] === 'undefined') {\n      return _extends({}, object, _defineProperty({}, filter.column.key, filter.returnBlankFilterItem()));\n    }\n\n    if (!filters[filter.column.key].values) {\n      return _extends({}, object, _defineProperty({}, filter.column.key, filter.returnFilterItem(filters[filter.column.key])));\n    }\n\n    return _extends({}, object, _defineProperty({}, filter.column.key, filter.returnFilterItem(filters[filter.column.key].values)));\n  }, {});\n};\n/**\n * Get all filtered columns where the default is not null\n *\n * @param {Object} tableColumns An object containing key: value column filter objects.\n * @return {Object} An object containing column filters where the default is not null.\n */\n\n\nvar getDefaultFilteredColumns = exports.getDefaultFilteredColumns = function getDefaultFilteredColumns(tableColumns) {\n  return Object.values(tableColumns).filter(function (filter) {\n    return !filter.isDefaultNull();\n  });\n};\n/**\n * Get all filter values where they are not empty\n *\n * @param {Object} tableColumns An object containing key: value column filter objects.\n * @param {Object} filters Filter objects matching react-bootstrap-table2.\n * @return {Object} Filter value objects where the value is set.\n */\n\n\nvar getFilterValues = exports.getFilterValues = function getFilterValues(tableColumns, filters) {\n  return Object.keys(filters).reduce(function (object, filter) {\n    if (tableColumns[filter].hasEmptyValue(filters[filter].filterVal)) {\n      return object;\n    }\n\n    return _extends({}, object, _defineProperty({}, filter, filters[filter].filterVal));\n  }, {});\n};\n/**\n * Get all default filter values where they are not empty\n *\n * @param {Object} tableColumns An object containing key: value column filter objects.\n * @return {Object} Filter value objects where the value is set.\n */\n\n\nvar getDefaultFilterValues = exports.getDefaultFilterValues = function getDefaultFilterValues(tableColumns) {\n  return Object.keys(tableColumns).reduce(function (object, filter) {\n    if (tableColumns[filter].hasEmptyValue(tableColumns[filter].getDefault())) {\n      return object;\n    }\n\n    return _extends({}, object, _defineProperty({}, filter, tableColumns[filter].getDefault()));\n  }, {});\n};\n/**\n * Generate column filters\n *\n * This function converts the table column filters in combination\n * with the react-bootstrap-table filter object to a column filter\n * array for fetching table data from an api.\n *\n * @param {Object} tableColumns An object containing key: value column filter objects.\n * @param {Object} filters A filter object matching react-bootstrap-table.\n * @return {({key, type, value}|*)[]} An array of column filters.\n */\n\n\nvar generateColumnFilters = exports.generateColumnFilters = function generateColumnFilters(tableColumns, filters) {\n  return Object.entries(filters).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        filter = _ref4[1];\n\n    return tableColumns[key].generateColumnFilter(filter);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}