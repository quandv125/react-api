{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Customers/ModalCalling.js\";\nimport React, { Component } from 'react';\nimport { CallingIO } from '../../socketIO/client';\nimport Modal from 'react-responsive-modal';\nimport Button from '@material-ui/core/Button';\nimport callApi from './../../utils/apiCaller';\nimport * as config from '../../constants/config';\nimport CustomerData from './../../components/Customers/CustomerData';\nimport CustomerDataTr from './../../components/Customers/CustomerDataTr';\nimport Swal from 'sweetalert2';\n\nvar ModalCalling =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalCalling, _Component);\n\n  function ModalCalling(props) {\n    var _this;\n\n    _classCallCheck(this, ModalCalling);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalCalling).call(this, props));\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onOpenModal = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleEventCustomerCalling = function () {\n      var _this$state = _this.state,\n          customer = _this$state.customer,\n          customer_id = _this$state.customer_id,\n          user = _this$state.user,\n          customernumber = _this$state.customernumber,\n          note = _this$state.note;\n      var data = {\n        customer_id: customer_id,\n        user: user,\n        customer: customer,\n        customernumber: customernumber,\n        note: note\n      };\n      callApi('POST', config.CRMWORLDFONE_URL, data).then(function (res) {\n        if (res.data.status) {\n          Swal('Good job!', 'You clicked the button!', 'success');\n\n          _this.onCloseModal();\n        } else {\n          Swal('Oops...', 'Your phone not incorrect format!', 'error');\n        }\n      });\n    };\n\n    _this.showCustomerData = function (customers, order_id) {\n      var result = null;\n\n      if (customers && typeof customers !== 'undefined' && customers.length > 0) {\n        result = customers.map(function (customer, index) {\n          return React.createElement(CustomerDataTr, {\n            key: index,\n            customer: customer,\n            order_id: order_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    _this.state = {\n      note: '',\n      open: false,\n      customer_id: null,\n      customer: '',\n      customernumber: '',\n      order: [],\n      role_id: sessionStorage.getItem('authentication') ? JSON.parse(sessionStorage.getItem('authentication')).role_id : '',\n      user: sessionStorage.getItem('authentication') ? JSON.parse(sessionStorage.getItem('authentication')).name : ''\n    };\n    CallingIO(function (message) {\n      console.log(_this.state.role_id);\n\n      if (_this.state.role_id && _this.state.role_id === config.RECRPTIONIST) {\n        if (message.data && message.data.power) {\n          _this.setState({\n            order: message.data.order,\n            customer_id: message.data.power.id,\n            customer: message.data.power.firstname + ' ' + message.data.power.lastname,\n            customernumber: message.data.power.phone\n          });\n        } // else {\n        //     this.setState({\n        //         customer_id: null,\n        //         customer: '',\n        //         customernumber: ''\n        //     });\n        // }\n        // console.log(message.data.order)\n        // let user = message.data.power.username;\n\n\n        _this.onOpenModal();\n      }\n    });\n    return _this;\n  }\n\n  _createClass(ModalCalling, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          customer = _this$state2.customer,\n          customernumber = _this$state2.customernumber,\n          order = _this$state2.order;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Kh\\xE1ch h\\xE0ng: \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", customer, \" \", customernumber)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"note\",\n        onChange: this.onChangeForm,\n        className: \"form-control\",\n        cols: \"80\",\n        rows: \"5\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleEventCustomerCalling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Save \", React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"done_all\"), \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), order && order.length > 0 && React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CustomerData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.showCustomerData(order, 123)))));\n    }\n  }]);\n\n  return ModalCalling;\n}(Component);\n\nexport default ModalCalling;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Customers/ModalCalling.js"],"names":["React","Component","CallingIO","Modal","Button","callApi","config","CustomerData","CustomerDataTr","Swal","ModalCalling","props","onChangeForm","event","target","name","value","type","checked","setState","onOpenModal","open","onCloseModal","handleEventCustomerCalling","state","customer","customer_id","user","customernumber","note","data","CRMWORLDFONE_URL","then","res","status","showCustomerData","customers","order_id","result","length","map","index","order","role_id","sessionStorage","getItem","JSON","parse","message","console","log","RECRPTIONIST","power","id","firstname","lastname","phone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CallingIO } from '../../socketIO/client';\nimport Modal from 'react-responsive-modal';\nimport Button from '@material-ui/core/Button';\nimport callApi from './../../utils/apiCaller';\nimport * as config from '../../constants/config';\nimport CustomerData from './../../components/Customers/CustomerData';\n\nimport CustomerDataTr from './../../components/Customers/CustomerDataTr';\n\nimport Swal from 'sweetalert2'\n\nclass ModalCalling extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnote: '',\n            open: false,\n            customer_id: null,\n            customer: '',\n            customernumber: '',\n            order: [],\n            role_id: sessionStorage.getItem('authentication') ? JSON.parse(sessionStorage.getItem('authentication')).role_id : '',\n            user: sessionStorage.getItem('authentication') ? JSON.parse(sessionStorage.getItem('authentication')).name : ''\n\t\t}\n\t\tCallingIO(message => {\n            console.log(this.state.role_id);\n            if(this.state.role_id && this.state.role_id === config.RECRPTIONIST){\n                if(message.data && message.data.power){\n                    this.setState({\n                        order: message.data.order,\n                        customer_id: message.data.power.id,\n                        customer: message.data.power.firstname + ' ' + message.data.power.lastname,\n                        customernumber: message.data.power.phone\n                    });\n                } \n                // else {\n                //     this.setState({\n                //         customer_id: null,\n                //         customer: '',\n                //         customernumber: ''\n                //     });\n                // }\n                // console.log(message.data.order)\n                // let user = message.data.power.username;\n                this.onOpenModal();\n            }\n            \n\t\t});\n    }\n    onChangeForm = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\tonOpenModal = () => {\n\t\tthis.setState({ open: true });\n\t};\n\t\n\tonCloseModal = () => {\n\t\tthis.setState({ open: false });\n\t};\n\n\thandleEventCustomerCalling = () => {\n        var {customer, customer_id, user, customernumber, note} = this.state;\n        var data = {customer_id: customer_id, user: user, customer: customer, customernumber: customernumber, note: note}\n\t\tcallApi('POST', config.CRMWORLDFONE_URL, data).then(res => {\n            if(res.data.status) {\n                Swal( 'Good job!', 'You clicked the button!', 'success')\n                this.onCloseModal()\n            } else {\n                Swal( 'Oops...', 'Your phone not incorrect format!', 'error')\n            }\n        })\n\t}\n    render() {\n        var {customer, customernumber, order} = this.state;\n        return (\n            <div>\n                <Modal open={this.state.open} onClose={this.onCloseModal} center>\n\t\t\t\t\t<h2>Khách hàng: <strong> {customer} {customernumber}</strong></h2>\n\t\t\t\t\t\t<div className=\"form-group\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<textarea name=\"note\" onChange={this.onChangeForm}  className=\"form-control\" cols=\"80\" rows=\"5\" required=\"required\"></textarea>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button variant=\"contained\"  color=\"secondary\" onClick={this.handleEventCustomerCalling}>Save <i className=\"material-icons\">done_all</i> </Button>\n                        <br/> <br/>\n                        {order && order.length > 0 &&\n                            <div className=\"grid-body no-border\">\n                                <CustomerData>\n                                    {this.showCustomerData(order, 123)}\n                                </CustomerData>\n                            </div>\n\t\t\t\t\t    }\n                </Modal>\n            </div>\n        );\n    }\n    showCustomerData = (customers, order_id) => {\n        var result = null;\n        if(customers && typeof customers !== 'undefined' && customers.length > 0){\n            result = customers.map((customer, index) => {\n                return <CustomerDataTr key={index} customer={customer} order_id={order_id}/>;\n            })\n            \n        }\n        return result;\n    }\n}\n\nexport default ModalCalling;"]},"metadata":{},"sourceType":"module"}