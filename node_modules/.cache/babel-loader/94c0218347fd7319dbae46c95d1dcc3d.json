{"ast":null,"code":"import _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Orders/OrderPage.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport * as config from '../../constants/config';\nimport { connect } from 'react-redux';\nimport { actFetchOrdersRequest, actDeleteOrderRequest } from '../../actions/index';\nimport Swal from 'sweetalert2';\nimport { Redirect } from 'react-router-dom';\nimport OrderList from './../../components/Orders/OrderList'; // import { connectIO } from '../../socketIO/client';\n\nimport Modal from 'react-responsive-modal';\nimport ModalOrder from './../../components/Orders/ModalOrder';\n\nvar OrderPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrderPage, _Component);\n\n  function OrderPage(props) {\n    var _this;\n\n    _classCallCheck(this, OrderPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderPage).call(this, props));\n\n    _this.onOpenModal = function (id) {\n      _this.setState({\n        order_id: id,\n        open: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.onActionModal = function (id) {\n      alert('test ' + id);\n    };\n\n    _this.state = {\n      orders: [],\n      loggedOut: false,\n      open: false,\n      order_id: '' // connectIO(message => {\n      // \tthis.props.getOrders();\n      // \tSwal('Good job!','You clicked the button!','success')\n      // });\n\n    };\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(OrderPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextprops) {\n      this.setState({\n        loggedOut: nextprops.authentication.loggedOut\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getOrders();\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(id) {\n      var _this2 = this;\n\n      Swal({\n        title: 'Are you sure?',\n        text: \"Are you sure you wish to delete this item?\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, Add it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this2.props.onDeleteOrder(id);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loggedOut) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.orders !== null) {\n        var orders = this.props.orders.orders;\n      }\n\n      return React.createElement(CSSTransitionGroup, {\n        transitionName: config.PAGETRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"card_giftcard\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"semi-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Orders\"))), React.createElement(OrderList, {\n        onDelete: this.onDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, orders), React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ModalOrder, {\n        order_id: this.state.order_id,\n        action: this.onActionModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })))));\n    } // end render\n    // showOrder (orders) {\n    // \t// console.log(orders);\n    // \tvar result = null;\n    // \tif ( orders && typeof orders !== 'undefined' && orders.length > 0) {\n    // \t\treturn \n    // \t}\n    // \treturn result;\n    // }\n\n  }]);\n\n  return OrderPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.orders,\n    authentication: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    getOrders: function getOrders() {\n      dispatch(actFetchOrdersRequest());\n    },\n    onDeleteOrder: function onDeleteOrder(id) {\n      dispatch(actDeleteOrderRequest(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPage);","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Orders/OrderPage.js"],"names":["React","Component","CSSTransitionGroup","config","connect","actFetchOrdersRequest","actDeleteOrderRequest","Swal","Redirect","OrderList","Modal","ModalOrder","OrderPage","props","onOpenModal","id","setState","order_id","open","onCloseModal","onActionModal","alert","state","orders","loggedOut","onDelete","bind","nextprops","authentication","getOrders","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","onDeleteOrder","pathname","PAGETRANSITION","TRANSITIONSPEED","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport * as config from '../../constants/config';\nimport { connect } from 'react-redux';\nimport { actFetchOrdersRequest, actDeleteOrderRequest } from '../../actions/index';\nimport Swal from 'sweetalert2';\nimport { Redirect } from 'react-router-dom';\nimport OrderList from './../../components/Orders/OrderList'\n// import { connectIO } from '../../socketIO/client';\nimport Modal from 'react-responsive-modal';\nimport ModalOrder from './../../components/Orders/ModalOrder';\nclass OrderPage extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\torders : [],\n\t\t\tloggedOut: false,\n\t\t\topen: false,\n\t\t\torder_id: ''\n\t\t}\n\t\t// connectIO(message => {\n\t\t// \tthis.props.getOrders();\n\t\t// \tSwal('Good job!','You clicked the button!','success')\n\t\t// });\n\t\tthis.onDelete = this.onDelete.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextprops) {\n        this.setState({\n            loggedOut: nextprops.authentication.loggedOut\n        });\n\t}\n\t\n\tcomponentWillMount(){\n\t\tthis.props.getOrders();\n\t}\n\n\tonDelete (id) {\n\t\t\n\t\tSwal({\n            title: 'Are you sure?',\n            text: \"Are you sure you wish to delete this item?\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Add it!'\n          }).then((result) => {\n            if (result.value) {\n                this.props.onDeleteOrder(id)\n            }\n        })\n\t}\n\n\tonOpenModal = (id) => {\n\t\tthis.setState({ order_id: id,open: true });\n\t};\n\t\n\tonCloseModal = () => {\n\t\tthis.setState({ open: false });\n    };\n\n\tonActionModal = (id) => {\n\t\talert('test ' + id)\n\t}\n\n\trender() {\n\t\tif(this.state.loggedOut){\n\t\t\treturn <Redirect to={{ pathname: \"/\"}}/>;\n\t\t}\n\t\t\n\t\tif (this.props.orders !== null) {\n\t\t\tvar {orders} = this.props.orders;\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<CSSTransitionGroup transitionName={config.PAGETRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n\t\t\t\t\n\t\t\t\t<div className=\"grid simple\">\n\t\t\t\t\t<div className=\"grid-body no-border\">\n\t\t\t\t\t\t{/* <Link to=\"/\" className=\"margin-right20\">\n\t\t\t\t\t\t\t<Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\t\t<i className=\"material-icons\">arrow_back</i>\n\t\t\t\t\t\t\t</Button>\t\n\t\t\t\t\t\t</Link> */}\n\t\t\t\t\t\t<div className=\"page-title\"> \n\t\t\t\t\t\t\t<i className=\"material-icons\">card_giftcard</i>\n\t\t\t\t\t\t\t<h3> <span className=\"semi-bold\">Orders</span></h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<OrderList onDelete={this.onDelete} >\n\t\t\t\t\t\t\t{orders}\n\t\t\t\t\t\t</OrderList>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<Modal open={this.state.open} onClose={this.onCloseModal} center>\n\t\t\t\t\t\t\t<ModalOrder order_id={this.state.order_id} action={this.onActionModal}/>\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</CSSTransitionGroup>\n\t\t);\n\t} // end render\n\n\t// showOrder (orders) {\n\t// \t// console.log(orders);\n\t// \tvar result = null;\n\t// \tif ( orders && typeof orders !== 'undefined' && orders.length > 0) {\n\t// \t\treturn \n\t// \t}\n\t// \treturn result;\n\t// }\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\torders: state.orders,\n\t\tauthentication: state.authentication\n\t};\n}\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tgetOrders : () => {\n\t\t\tdispatch(actFetchOrdersRequest());\n\t\t},\n\t\tonDeleteOrder : (id) => {\n\t\t\tdispatch(actDeleteOrderRequest(id));\n\t\t}\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPage);\n"]},"metadata":{},"sourceType":"module"}