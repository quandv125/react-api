{"ast":null,"code":"import * as Types from './../constants/ActionType';\nvar initialState = {\n  loggedIn: null,\n  loggedOut: false\n};\n\nvar authentication = function authentication() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOGIN:\n      if (action.user.status) {\n        // if login is successfully\n        sessionStorage.setItem('authentication', JSON.stringify(action.user));\n        state = {\n          loggedIn: action.user.status,\n          loggedOut: false,\n          user: JSON.stringify(action.user)\n        };\n      } else {\n        state = {\n          loggedIn: action.user.status,\n          loggedOut: false,\n          msg: action.user.msg\n        };\n      }\n\n      return state;\n\n    case Types.LOGOUT:\n      sessionStorage.removeItem('authentication');\n      state = {\n        loggedIn: false,\n        loggedOut: true,\n        user: null,\n        msg: null\n      };\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default authentication;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/reducers/authentication.js"],"names":["Types","initialState","loggedIn","loggedOut","authentication","state","action","type","LOGIN","user","status","sessionStorage","setItem","JSON","stringify","msg","LOGOUT","removeItem"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAEA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,QAAQ,EAAE,IAAZ;AAAkBC,EAAAA,SAAS,EAAE;AAA7B,CAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,KAAK,CAACQ,KAAX;AACI,UAAIF,MAAM,CAACG,IAAP,CAAYC,MAAhB,EAAwB;AAAE;AACtBC,QAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACG,IAAtB,CAAzC;AACAJ,QAAAA,KAAK,GAAG;AAAEH,UAAAA,QAAQ,EAAEI,MAAM,CAACG,IAAP,CAAYC,MAAxB;AAAgCP,UAAAA,SAAS,EAAE,KAA3C;AAAkDM,UAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACG,IAAtB;AAAxD,SAAR;AACH,OAHD,MAGO;AACHJ,QAAAA,KAAK,GAAG;AAAEH,UAAAA,QAAQ,EAAEI,MAAM,CAACG,IAAP,CAAYC,MAAxB;AAAgCP,UAAAA,SAAS,EAAE,KAA3C;AAAkDY,UAAAA,GAAG,EAAET,MAAM,CAACG,IAAP,CAAYM;AAAnE,SAAR;AACH;;AACD,aAAOV,KAAP;;AACJ,SAAKL,KAAK,CAACgB,MAAX;AACIL,MAAAA,cAAc,CAACM,UAAf,CAA0B,gBAA1B;AACAZ,MAAAA,KAAK,GAAG;AAAEH,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,SAAS,EAAE,IAA9B;AAAoCM,QAAAA,IAAI,EAAE,IAA1C;AAAgDM,QAAAA,GAAG,EAAE;AAArD,OAAR;AACA,aAAOV,KAAP;;AACJ;AACI,aAAOA,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,cAAf","sourcesContent":["import * as Types from './../constants/ActionType';\n\nconst initialState = { loggedIn: null, loggedOut: false };\n\nconst authentication = (state = initialState, action) => {\n    switch(action.type){\n        case Types.LOGIN:\n            if( action.user.status ){ // if login is successfully\n                sessionStorage.setItem('authentication', JSON.stringify(action.user));\n                state = { loggedIn: action.user.status, loggedOut: false, user: JSON.stringify(action.user) };\n            } else {\n                state = { loggedIn: action.user.status, loggedOut: false, msg: action.user.msg };\n            }\n            return state;\n        case Types.LOGOUT:\n            sessionStorage.removeItem('authentication');\n            state = { loggedIn: false, loggedOut: true, user: null, msg: null };\n            return state;\n        default: \n            return state;\n    }\n}\n\nexport default authentication;"]},"metadata":{},"sourceType":"module"}