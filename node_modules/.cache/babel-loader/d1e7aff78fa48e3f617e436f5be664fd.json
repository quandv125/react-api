{"ast":null,"code":"import * as Types from '../constants/ActionType';\nimport { findIndex } from 'lodash';\nvar initialState = {\n  status: null,\n  sms: null\n};\n\nvar sms = function sms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.FETCH_SMS:\n      if (action.sms.status) {\n        console.log(action.sms);\n        state = {\n          status: action.sms.status,\n          sms: action.sms.data\n        };\n      }\n\n      return state;\n\n    case Types.DELETE_SMS:\n      var index = findIndex(state.sms, {\n        id: action.id\n      });\n\n      if (index !== -1) {\n        state.sms.splice(index, 1);\n      }\n\n      state = {\n        status: false,\n        sms: state.sms\n      };\n      return state;\n    // case Types.ADD_SMS: \n    //     state = { \n    //         status: action.user.status, \n    //         sms: action.user,\n    //         preUser: !action.user.status ? action.userOld : null\n    //     };\n    //     return state;\n    // case Types.UPDATE_SMS:\n    //     let {id} = action.user.user; \n    //     index = findIndex(state.sms, { id: id });\n    //     if (index !== -1) {\n    //         state.sms[index] = action.user.user;\n    //     }\n    //     state = {\n    //         status: action.user.status,\n    //         sms: action.user\n    //     }\n    //     return state;\n    // case Types.GET_USER: \n    //     if (action.user){\n    //         state = {\n    //             userEdit: action.user\n    //         }\n    //     }\n    //     return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default sms;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/reducers/sms.js"],"names":["Types","findIndex","initialState","status","sms","state","action","type","FETCH_SMS","console","log","data","DELETE_SMS","index","id","splice"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,IAAIC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,GAAG,EAAE;AAArB,CAAnB;;AAEA,IAAMA,GAAG,GAAG,SAANA,GAAM,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAE1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,KAAK,CAACQ,SAAX;AACI,UAAIF,MAAM,CAACF,GAAP,CAAWD,MAAf,EAAsB;AAClBM,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACF,GAAnB;AACAC,QAAAA,KAAK,GAAG;AACJF,UAAAA,MAAM,EAAEG,MAAM,CAACF,GAAP,CAAWD,MADf;AAEJC,UAAAA,GAAG,EAAEE,MAAM,CAACF,GAAP,CAAWO;AAFZ,SAAR;AAIH;;AACD,aAAON,KAAP;;AACJ,SAAKL,KAAK,CAACY,UAAX;AACI,UAAIC,KAAK,GAAGZ,SAAS,CAACI,KAAK,CAACD,GAAP,EAAY;AAAEU,QAAAA,EAAE,EAAER,MAAM,CAACQ;AAAb,OAAZ,CAArB;;AACA,UAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AAC1BR,QAAAA,KAAK,CAACD,GAAN,CAAUW,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACS;;AACDR,MAAAA,KAAK,GAAG;AACJF,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAEC,KAAK,CAACD;AAFP,OAAR;AAIA,aAAOC,KAAP;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOA,KAAP;AAhDR;AAkDH,CApDD;;AAsDA,eAAeD,GAAf","sourcesContent":["import * as Types from '../constants/ActionType';\nimport {findIndex} from 'lodash';\nvar initialState = { status: null, sms: null };\n\nconst sms = (state = initialState, action) => {\n   \n    switch(action.type){\n        case Types.FETCH_SMS:\n            if (action.sms.status){\n                console.log(action.sms);\n                state = {\n                    status: action.sms.status, \n                    sms: action.sms.data\n                }\n            }\n            return state;\n        case Types.DELETE_SMS:\n            var index = findIndex(state.sms, { id: action.id });\n            if (index !== -1) {\n\t\t\t\tstate.sms.splice(index, 1);\n            }\n            state = {\n                status: false,\n                sms: state.sms\n            }\n            return state;\n        // case Types.ADD_SMS: \n            \n        //     state = { \n        //         status: action.user.status, \n        //         sms: action.user,\n        //         preUser: !action.user.status ? action.userOld : null\n        //     };\n        //     return state;\n        // case Types.UPDATE_SMS:\n \n        //     let {id} = action.user.user; \n        //     index = findIndex(state.sms, { id: id });\n        //     if (index !== -1) {\n        //         state.sms[index] = action.user.user;\n        //     }\n        //     state = {\n        //         status: action.user.status,\n        //         sms: action.user\n        //     }\n        //     return state;\n        // case Types.GET_USER: \n        //     if (action.user){\n        //         state = {\n        //             userEdit: action.user\n        //         }\n        //     }\n        //     return state;\n        default: \n            return state;\n    }\n}\n\nexport default sms;"]},"metadata":{},"sourceType":"module"}