{"ast":null,"code":"/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n'use strict';\n\nvar safeBuffer = require('safe-buffer');\n\nvar Buffer = safeBuffer.Buffer;\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\n\nvar concat = function concat(list, totalLength) {\n  var target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    var buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n};\n\ntry {\n  var bufferUtil = require('bufferutil');\n\n  module.exports = Object.assign({\n    concat: concat\n  }, bufferUtil.BufferUtil || bufferUtil);\n} catch (e)\n/* istanbul ignore next */\n{\n  /**\n   * Masks a buffer using the given mask.\n   *\n   * @param {Buffer} source The buffer to mask\n   * @param {Buffer} mask The mask to use\n   * @param {Buffer} output The buffer where to store the result\n   * @param {Number} offset The offset at which to start writing\n   * @param {Number} length The number of bytes to mask.\n   * @public\n   */\n  var mask = function mask(source, _mask, output, offset, length) {\n    for (var i = 0; i < length; i++) {\n      output[offset + i] = source[i] ^ _mask[i & 3];\n    }\n  };\n  /**\n   * Unmasks a buffer using the given mask.\n   *\n   * @param {Buffer} buffer The buffer to unmask\n   * @param {Buffer} mask The mask to use\n   * @public\n   */\n\n\n  var unmask = function unmask(buffer, mask) {\n    // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n    var length = buffer.length;\n\n    for (var i = 0; i < length; i++) {\n      buffer[i] ^= mask[i & 3];\n    }\n  };\n\n  module.exports = {\n    concat: concat,\n    mask: mask,\n    unmask: unmask\n  };\n}","map":null,"metadata":{},"sourceType":"script"}