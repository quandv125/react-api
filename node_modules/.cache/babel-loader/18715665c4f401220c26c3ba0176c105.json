{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toastrsCache = undefined;\n\nvar _createReducer;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _utils = require('./utils.js');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // TOTO: find a better way of handling this issue\n// We will cache data so we can check for duplicated before fire the add action.\n\n\nvar toastrsCache = exports.toastrsCache = [];\nvar initialState = {\n  toastrs: [],\n  confirm: null\n};\nexports.default = (0, _utils.createReducer)(initialState, (_createReducer = {}, _defineProperty(_createReducer, _constants.ADD_TOASTR, function (state, toastr) {\n  if (toastr.ignoreToastr) {\n    return state;\n  }\n\n  var newToastr = _extends({\n    id: (0, _utils.guid)(),\n    position: _config2.default.position\n  }, toastr);\n\n  var newState = {};\n\n  if (!_config2.default.newestOnTop) {\n    newState = _extends({}, state, {\n      toastrs: [].concat(_toConsumableArray(state.toastrs), [newToastr])\n    });\n  } else {\n    newState = _extends({}, state, {\n      toastrs: [newToastr].concat(_toConsumableArray(state.toastrs))\n    });\n  }\n\n  exports.toastrsCache = toastrsCache = newState.toastrs;\n  return newState;\n}), _defineProperty(_createReducer, _constants.REMOVE_TOASTR, function (state, id) {\n  var newState = _extends({}, state, {\n    toastrs: state.toastrs.filter(function (toastr) {\n      return toastr.id !== id;\n    })\n  });\n\n  exports.toastrsCache = toastrsCache = newState.toastrs;\n  return newState;\n}), _defineProperty(_createReducer, _constants.REMOVE_BY_TYPE, function (state, type) {\n  var newState = _extends({}, state, {\n    toastrs: state.toastrs.filter(function (toastr) {\n      return toastr.type !== type;\n    })\n  });\n\n  exports.toastrsCache = toastrsCache = newState.toastrs;\n  return newState;\n}), _defineProperty(_createReducer, _constants.CLEAN_TOASTR, function (state) {\n  exports.toastrsCache = toastrsCache = [];\n  return _extends({}, state, {\n    toastrs: []\n  });\n}), _defineProperty(_createReducer, _constants.SHOW_CONFIRM, function (state, _ref) {\n  var id = _ref.id,\n      message = _ref.message,\n      options = _ref.options;\n  return _extends({}, state, {\n    confirm: {\n      id: id || (0, _utils.guid)(),\n      show: true,\n      message: message,\n      options: options || {}\n    }\n  });\n}), _defineProperty(_createReducer, _constants.HIDE_CONFIRM, function (state) {\n  return _extends({}, state, {\n    confirm: null\n  });\n}), _createReducer));","map":null,"metadata":{},"sourceType":"script"}