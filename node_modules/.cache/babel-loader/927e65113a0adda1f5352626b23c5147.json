{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Login/ForgotForm.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Validator from 'react-forms-validator';\nimport callApi from '../../utils/apiCaller';\nimport * as config from '../../constants/config';\n\nvar ForgotForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotForm, _Component);\n\n  function ForgotForm(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotForm).call(this, props));\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSave = function (e) {\n      e.preventDefault();\n      var email = _this.state.email;\n      var data = {\n        email: email\n      };\n\n      if (email !== '' && !_this.state.isFormValidationErrors) {\n        // callApi('POST', config.API_URL + 'forgot' , data).then(res => {\n        //     if(res && res.data.status){\n        _this.setState({\n          email: '',\n          notification: true,\n          submit: true\n        }); // } else {\n        //     this.setState({ notification: 'exist'});\n        // }\n        // });\n\n      } else {\n        _this.setState({\n          notification: false\n        });\n      }\n    };\n\n    _this.handleChangePass = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          password = _this$state.password;\n      var data = {\n        code: code,\n        password: password\n      }; // if(!this.state.isFormValidationErrors){\n\n      console.log(data); // }\n    };\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.showError = function () {\n      var notification = _this.state.notification;\n\n      if (notification === 'exist') {\n        return React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \" Email kh\\xF4ng t\\u1ED3n t\\u1EA1i \");\n      } else if (notification) {\n        return React.createElement(\"div\", {\n          className: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \" Y\\xEAu c\\u1EA7u \\u0111\\u1EB7t l\\u1EA1i m\\u1EADt kh\\u1EA9u th\\xE0nh c\\xF4ng. Vui l\\xF2ng ki\\u1EC3m tra email \");\n      } else if (notification !== '') {\n        return React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \" Kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng ho\\u1EB7c ki\\u1EC3m tra l\\u1EA1i email \");\n      }\n    };\n\n    _this.showForm = function (submit) {\n      if (!submit) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, _this.showError(), React.createElement(\"form\", {\n          className: \"animated fadeIn validate\",\n          noValidate: true,\n          onSubmit: _this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"register-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          value: _this.state.email,\n          onChange: _this.onChangeForm,\n          name: \"email\",\n          placeholder: \"Email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(Validator, {\n          isValidationError: _this.isValidationError,\n          isFormSubmitted: _this.state.submitted,\n          reference: {\n            email: _this.state.email\n          },\n          validationRules: {\n            email: true,\n            required: true\n          },\n          validationMessages: {\n            email: \"\",\n            required: \"Không được để trống\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control-group col-md-12 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"submit\",\n          className: \"btn btn-primary btn-cons\",\n          variant: \"contained\",\n          style: styles.buttonLogin,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Submit\")))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"animated fadeIn validate\",\n          noValidate: true,\n          onSubmit: _this.handleChangePass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"register-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          value: _this.state.code,\n          onChange: _this.onChangeForm,\n          name: \"code\",\n          placeholder: \"Code\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(Validator, {\n          isValidationError: _this.isValidationError,\n          isFormSubmitted: _this.state.submitted,\n          reference: {\n            email: _this.state.email\n          },\n          validationRules: {\n            email: true,\n            required: true\n          },\n          validationMessages: {\n            email: \"\",\n            required: \"Không được để trống\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"register-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          value: _this.state.password,\n          onChange: _this.onChangeForm,\n          name: \"password\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), React.createElement(Validator, {\n          isValidationError: _this.isValidationError,\n          isFormSubmitted: _this.state.submitted,\n          reference: {\n            password: _this.state.password\n          },\n          validationRules: {\n            required: true,\n            maxLength: 20\n          },\n          validationMessages: {\n            required: \"Trường này không được để trống\",\n            maxLength: \"Độ dài tối đa là: 20 kí tự \"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"register-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          value: _this.state.confirm_password,\n          onChange: _this.onChangeForm,\n          name: \"confirm_password\",\n          placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }), React.createElement(Validator, {\n          isValidationError: _this.isValidationError,\n          isFormSubmitted: _this.state.submitted,\n          reference: {\n            confirm_password: _this.state.confirm_password\n          },\n          validationRules: {\n            required: true,\n            maxLength: 20,\n            equalTo: _this.state.new_password\n          },\n          validationMessages: {\n            required: \"Trường này không được để trống\",\n            maxLength: \"Độ dài tối đa là: 20 kí tự \",\n            equalTo: \"Không khớp với mật khẩu\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"control-group col-md-12 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"submit\",\n          className: \"btn btn-primary btn-cons\",\n          variant: \"contained\",\n          style: styles.buttonLogin,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"Submit\")))));\n      }\n    };\n\n    _this.state = {\n      email: \"\",\n      notification: \"\",\n      submit: false,\n      code: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    };\n    _this.flag = true;\n    return _this;\n  }\n\n  _createClass(ForgotForm, [{\n    key: \"render\",\n    value: function render() {\n      var submit = this.state.submit;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.showForm(submit));\n    }\n  }]);\n\n  return ForgotForm;\n}(Component);\n\nvar styles = {};\nstyles.buttonLogin = {\n  fontSize: '14px'\n};\nexport default ForgotForm;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Login/ForgotForm.js"],"names":["React","Component","Button","Validator","callApi","config","ForgotForm","props","onChangeForm","event","target","name","value","type","checked","setState","handleSave","e","preventDefault","email","state","data","isFormValidationErrors","notification","submit","handleChangePass","code","password","console","log","isValidationError","flag","showError","showForm","submitted","required","styles","buttonLogin","maxLength","confirm_password","equalTo","new_password","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Validator from 'react-forms-validator';\nimport callApi from '../../utils/apiCaller';\nimport * as config from '../../constants/config';\n\nclass ForgotForm extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            email: \"\",\n            notification: \"\" ,\n            submit: false,\n            code: \"\",\n            password: \"\",\n            confirm_password: \"\"\n        };\n        this.flag = true;\n    }\n\n    onChangeForm = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked : target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n        });\n\t}\n\n    handleSave = (e) => {\n        e.preventDefault();\n        var {email} = this.state;\n\t\tvar data = { email: email};\n\t\tif(email !== '' && !this.state.isFormValidationErrors){\n         \n            // callApi('POST', config.API_URL + 'forgot' , data).then(res => {\n            //     if(res && res.data.status){\n                    \n                    this.setState({ email: '', notification: true, submit: true });\n                // } else {\n                //     this.setState({ notification: 'exist'});\n                // }\n            // });\n\t\t} else {\n\t\t\tthis.setState({ notification: false });\n\t\t}\n    }\n\n    handleChangePass = (e) => {\n        e.preventDefault();\n        var {code, password} = this.state;\n        var data = {code: code, password: password};\n        // if(!this.state.isFormValidationErrors){\n            console.log(data); \n        // }\n    }\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n    }\n       \n    showError = () => {\n        var {notification} = this.state;\n        if( notification === 'exist'){\n            return \t<div className=\"alert alert-danger\"> Email không tồn tại </div>;\n        } else if (notification) {\n            return \t<div className=\"alert\"> Yêu cầu đặt lại mật khẩu thành công. Vui lòng kiểm tra email </div>;\n        } else if ( notification !== '' ){\n            return \t<div className=\"alert alert-danger\"> Không được để trống hoặc kiểm tra lại email </div>;\n        }\n    }\n\n    render() {\n        var {submit} = this.state;\n        return (\n            <div>\n                \n                {this.showForm(submit)}\n                \n\n            </div>\n        );\n    }\n\n    showForm = (submit) => {\n        if(!submit){\n            return (\n                <div>\n                    { this.showError() }\n                    <form className=\"animated fadeIn validate\" noValidate onSubmit={this.handleSave}>\n                        <div className=\"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\">\n                            <div className=\"register-form\">\n                            <input \n                                className=\"form-control\" \n                                type=\"text\" \n                                value={this.state.email} \n                                onChange={this.onChangeForm} \n                                name=\"email\" \n                                placeholder=\"Email\"/>\n                            <Validator \n                                isValidationError={this.isValidationError}\n                                isFormSubmitted={this.state.submitted} \n                                reference={{email : this.state.email}}\n                                validationRules={{email:true, required: true}} \n                                validationMessages={{ email: \"\", required: \"Không được để trống\"}}/>\n                                \n                            </div>\n                            \n                        </div>\n                        <div className=\"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\">\n                            <div className=\"control-group col-md-12 text-center\">\n                                \n                                <Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" style={ styles.buttonLogin } color=\"primary\">\n                                    Submit\n                                </Button>\n                                \n                            </div>\n                        </div>\n                    </form>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <form className=\"animated fadeIn validate\" noValidate onSubmit={this.handleChangePass}>\n                        <div className=\"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\">\n                            <div className=\"register-form\">\n                                <input \n                                    className=\"form-control\" \n                                    type=\"text\" \n                                    value={this.state.code} \n                                    onChange={this.onChangeForm} \n                                    name=\"code\" \n                                    placeholder=\"Code\"\n                                    />\n                                <Validator \n                                    isValidationError={this.isValidationError}\n                                    isFormSubmitted={this.state.submitted} \n                                    reference={{email : this.state.email}}\n                                    validationRules={{email:true, required: true}} \n                                    validationMessages={{ email: \"\", required: \"Không được để trống\"}}/>\n                                \n                            </div>\n\n                            <div className=\"register-form\">\n                                \n                                <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    value={this.state.password} \n                                    onChange={this.onChangeForm} \n                                    name=\"password\" \n                                    placeholder=\"Mật khẩu mới\"/>\n                                <Validator \n                                    isValidationError={this.isValidationError}\n                                    isFormSubmitted={this.state.submitted} \n                                    reference={{password : this.state.password}}\n                                    validationRules={{required:true, maxLength:20}} \n                                    validationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \"}}/>\n                            </div>\n\n                            <div className=\"register-form\">\n                               \n                                <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    value={this.state.confirm_password} \n                                    onChange={this.onChangeForm} \n                                    name=\"confirm_password\" \n                                    placeholder=\"Xác nhận mật khẩu\"/>\n                                <Validator \n                                    isValidationError={this.isValidationError}\n                                    isFormSubmitted={this.state.submitted} \n                                    reference={{confirm_password : this.state.confirm_password}}\n                                    validationRules={{required:true, maxLength:20, equalTo:this.state.new_password}} \n                                    validationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \", equalTo: \"Không khớp với mật khẩu\"}}/>\n                            </div>\n                            \n                        </div>\n                        <div className=\"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\">\n                            <div className=\"control-group col-md-12 text-center\">\n                                \n                                <Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" style={ styles.buttonLogin } color=\"primary\">\n                                    Submit\n                                </Button>\n                                \n                            </div>\n                        </div>\n                    </form>\n                </div>\n            );\n        }\n    }\n\n}\n\n\n\nconst styles = {};\nstyles.buttonLogin = {\n\tfontSize: '14px'\n};\n\nexport default ForgotForm;"]},"metadata":{},"sourceType":"module"}