{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ColumnFilter2 = require('./ColumnFilter');\n\nvar _ColumnFilter3 = _interopRequireDefault(_ColumnFilter2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar NumberFilter = function (_ColumnFilter) {\n  _inherits(NumberFilter, _ColumnFilter);\n\n  function NumberFilter() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, NumberFilter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NumberFilter.__proto__ || Object.getPrototypeOf(NumberFilter)).call.apply(_ref, [this].concat(args))), _this), _this.resetDefault = function () {\n      _this.column.defaultValue = {\n        number: _this.getBaseDefault(),\n        comparator: _this.column.defaultValue.comparator\n      };\n      return _this.column;\n    }, _this.isDefaultNull = function () {\n      if (_this.column.defaultValue.number) {\n        return false;\n      }\n\n      return true;\n    }, _this.hasEmptyValue = function (_ref2) {\n      var number = _ref2.number;\n\n      if (!number || number === '') {\n        return true;\n      }\n\n      return false;\n    }, _this.returnBlankFilterItem = function () {\n      return _this.returnFilterItem({\n        comparator: _this.column.defaultValue.comparator\n      });\n    }, _this.generateColumnFilter = function (_ref3) {\n      var comparator = _ref3.comparator,\n          number = _ref3.number;\n      var type = 'like';\n\n      switch (comparator) {\n        case '=':\n          type = 'eq';\n          break;\n\n        case '>':\n          type = 'gt';\n          break;\n\n        case '>=':\n          type = 'gteq';\n          break;\n\n        case '<':\n          type = 'lt';\n          break;\n\n        case '<=':\n          type = 'lteq';\n          break;\n\n        case '!=':\n          type = 'nteq';\n          break;\n\n        default:\n      }\n\n      return {\n        key: _this.column.key,\n        type: type,\n        value: number\n      };\n    }, _this.getColumnFilterProps = function (defaultValue) {\n      return {\n        type: _this.column.filter,\n        placeholder: ' ',\n        comparators: ['=', '>', '>=', '<', '<=', '!=', '...'],\n        withoutEmptyComparatorOption: true,\n        defaultValue: defaultValue\n      };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * Reset the default number value of the column filter to null\n   *\n   * @return {Object} The updated column object.\n   */\n\n  /**\n   * Check if the current number filter default value is null\n   *\n   * @return {boolean} True if the default value is null.\n   */\n\n  /**\n   * Check if the filter has an empty value\n   *\n   * @param {string} number The number value entered.\n   * @return {boolean} True if the value is set.\n   */\n\n  /**\n   * Return a blank number filter item\n   *\n   * @return {{type: string, value: *}} A filter object item.\n   */\n\n  /**\n   * Generate a column filter object\n   *\n   * @param {string} comparator The comparator symbol.\n   * @param {number} value The numeric value of the filter.\n   * @return {{key, type: string, value}} A column filter object.\n   */\n\n  /**\n   * Get the column filter properties for displaying\n   *\n   * @param {mixed} defaultValue The default value of the column filter.\n   * @return {{type: *, placeholder: string, comparators: string[], withoutEmptyComparatorOption: boolean, defaultValue: *}}\n   */\n\n\n  return NumberFilter;\n}(_ColumnFilter3.default);\n\nexports.default = NumberFilter;","map":null,"metadata":{},"sourceType":"script"}