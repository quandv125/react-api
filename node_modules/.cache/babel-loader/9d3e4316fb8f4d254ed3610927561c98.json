{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Users/ChangePass.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Validator from 'react-forms-validator'; // import { Link } from 'react-router-dom';\n\nimport callApi from './../../utils/apiCaller';\nimport * as config from './../../constants/config';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\n\nvar ChangePass =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePass, _Component);\n\n  function ChangePass(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePass).call(this, props));\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        submitted: true\n      });\n\n      var _this$state = _this.state,\n          old_password = _this$state.old_password,\n          new_password = _this$state.new_password,\n          confirm_password = _this$state.confirm_password;\n      var data = {\n        id: config.USER_ID,\n        old_password: old_password,\n        new_password: new_password,\n        confirm_password: confirm_password\n      };\n      var isFormValidationErrors = _this.state.isFormValidationErrors;\n\n      if (!isFormValidationErrors) {\n        callApi('POST', config.API_URL + \"change-password\", data).then(function (res) {\n          console.log(res);\n\n          if (res) {\n            if (res.data.status) {\n              Swal(' Đổi mật khẩu thành công!', res.data.message, 'success');\n            } else {\n              Swal('Oops...', res.data.message, 'error');\n            }\n          }\n        });\n      } else {\n        Swal('Vui lòng nhập tất cả các ô...', '', 'error');\n      }\n    };\n\n    _this.state = {\n      old_password: '',\n      new_password: '',\n      confirm_password: '',\n      isFormValidationErrors: true,\n      submitted: false\n    };\n    return _this;\n  }\n\n  _createClass(ChangePass, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(CSSTransitionGroup, {\n        transitionName: config.PAGETRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"M\\u1EADt kh\\u1EA9u c\\u0169\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.old_password,\n        onChange: this.onChangeForm,\n        name: \"old_password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u c\\u0169\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          old_password: this.state.old_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.new_password,\n        onChange: this.onChangeForm,\n        name: \"new_password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          new_password: this.state.new_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.confirm_password,\n        onChange: this.onChangeForm,\n        name: \"confirm_password\",\n        placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          confirm_password: this.state.confirm_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20,\n          equalTo: this.state.new_password\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \",\n          equalTo: \"Không khớp với mật khẩu\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"L\\u01B0u\")))))));\n    }\n  }]);\n\n  return ChangePass;\n}(Component);\n\nexport default ChangePass;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Users/ChangePass.js"],"names":["React","Component","CSSTransitionGroup","Validator","callApi","config","Button","Swal","ChangePass","props","isValidationError","flag","setState","isFormValidationErrors","onChangeForm","event","target","name","value","type","checked","handleFormSubmit","preventDefault","submitted","state","old_password","new_password","confirm_password","data","id","USER_ID","API_URL","then","res","console","log","status","message","PAGETRANSITION","TRANSITIONSPEED","required","maxLength","equalTo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Validator from 'react-forms-validator';\n// import { Link } from 'react-router-dom';\nimport callApi from './../../utils/apiCaller';\nimport * as config from './../../constants/config';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\n\nclass ChangePass extends Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            old_password: '',\n            new_password: '',\n            confirm_password: '',\n            isFormValidationErrors : true,\n\t\t\tsubmitted: false,\n        }\n    }\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n   \t}\n\n       onChangeForm = (event) => {\n        var target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\t\tthis.setState({ submitted:true });\n\t\tvar {old_password, new_password, confirm_password} = this.state;\n\t\tvar data = { \n\t\t\tid: config.USER_ID,\n\t\t\told_password: old_password,\n\t\t\tnew_password: new_password,\n\t\t\tconfirm_password: confirm_password\n\t\t};\n\t\tlet { isFormValidationErrors } = this.state;\n        if ( !isFormValidationErrors ){\n         \n\t\t\tcallApi('POST', config.API_URL + \"change-password\", data).then( res => {\n                console.log(res);\n                if(res){\n                    if( res.data.status ){\n                        Swal(' Đổi mật khẩu thành công!', res.data.message, 'success')\n                    } else {\n                        Swal('Oops...', res.data.message, 'error')\n                    }\n                }\n            });\n        } else {\n            Swal('Vui lòng nhập tất cả các ô...', '', 'error')\n\n        }\n    }\n\n    render() {\n       \n        return (\n            <React.Fragment>\n                <CSSTransitionGroup transitionName={config.PAGETRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n                    <div className=\"grid simple\">\n                    <div className=\"grid-body no-border\">\n                        \n                       \n                        <form noValidate onSubmit={this.handleFormSubmit}>\n\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6\">\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Mật khẩu cũ</label>\n\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.old_password} \n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm} \n\t\t\t\t\t\t\t\t\t\t\tname=\"old_password\" \n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Mật khẩu cũ\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\t\t\t\treference={{old_password : this.state.old_password}}\n\t\t\t\t\t\t\t\t\t\t\t\tvalidationRules={{required:true, maxLength:20}} \n\t\t\t\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \"}}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n                                    <div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Mật khẩu mới</label>\n\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.new_password} \n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm} \n\t\t\t\t\t\t\t\t\t\t\tname=\"new_password\" \n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Mật khẩu mới\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\t\t\t\treference={{new_password : this.state.new_password}}\n\t\t\t\t\t\t\t\t\t\t\t\tvalidationRules={{required:true, maxLength:20}} \n\t\t\t\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \"}}/>\n\t\t\t\t\t\t\t\t\t</div>\n\n                                    <div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Xác nhận mật khẩu</label>\n\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.confirm_password} \n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm} \n\t\t\t\t\t\t\t\t\t\t\tname=\"confirm_password\" \n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Xác nhận mật khẩu\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\t\t\t\treference={{confirm_password : this.state.confirm_password}}\n\t\t\t\t\t\t\t\t\t\t\t\tvalidationRules={{required:true, maxLength:20, equalTo:this.state.new_password}} \n\t\t\t\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \", equalTo: \"Không khớp với mật khẩu\"}}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12\">\n\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\">Lưu</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\n                    </div>\n                </div>\n                \n                \n                </CSSTransitionGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ChangePass;"]},"metadata":{},"sourceType":"module"}