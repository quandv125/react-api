{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Users/ChangePassUser.js\";\nimport React, { Component } from 'react';\n\nvar ChangePassUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePassUser, _Component);\n\n  function ChangePassUser(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePassUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePassUser).call(this, props));\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        submitted: true\n      });\n\n      var _this$state = _this.state,\n          new_password = _this$state.new_password,\n          confirm_password = _this$state.confirm_password;\n      var data = {\n        new_password: new_password,\n        confirm_password: confirm_password\n      };\n      var isFormValidationErrors = _this.state.isFormValidationErrors;\n\n      if (!isFormValidationErrors) {\n        callApi('POST', config.API_URL + \"change-password\", data).then(function (res) {\n          if (res) {\n            if (res.data.status) {\n              Swal(' Đổi mật khẩu thành công!', res.data.message, 'success');\n            } else {\n              Swal('', res.data.message, 'error');\n            }\n          }\n        });\n      } else {\n        Swal('Vui lòng nhập tất cả các ô...', '', 'error');\n      }\n    };\n\n    _this.state = {\n      new_password: '',\n      confirm_password: '',\n      isFormValidationErrors: true,\n      submitted: false\n    };\n    return _this;\n  }\n\n  _createClass(ChangePassUser, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CSSTransitionGroup, {\n        transitionName: config.PAGETRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.new_password,\n        onChange: this.onChangeForm,\n        name: \"new_password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          new_password: this.state.new_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.confirm_password,\n        onChange: this.onChangeForm,\n        name: \"confirm_password\",\n        placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          confirm_password: this.state.confirm_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20,\n          equalTo: this.state.new_password\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \",\n          equalTo: \"Không khớp với mật khẩu\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"L\\u01B0u\")))))));\n    }\n  }]);\n\n  return ChangePassUser;\n}(Component);\n\nexport default ChangePassUser;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Users/ChangePassUser.js"],"names":["React","Component","ChangePassUser","props","isValidationError","flag","setState","isFormValidationErrors","onChangeForm","event","target","name","value","type","checked","handleFormSubmit","preventDefault","submitted","state","new_password","confirm_password","data","callApi","config","API_URL","then","res","status","Swal","message","PAGETRANSITION","TRANSITIONSPEED","required","maxLength","equalTo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ChangePassUser extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            new_password: '',\n            confirm_password: '',\n            isFormValidationErrors : true,\n\t\t\tsubmitted: false,\n        }\n    }\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n   \t}\n\n    onChangeForm = (event) => {\n        var target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\t\tthis.setState({ submitted:true });\n\t\tvar { new_password, confirm_password} = this.state;\n\t\tvar data = { \n\t\t\tnew_password: new_password,\n\t\t\tconfirm_password: confirm_password\n\t\t};\n\t\tlet { isFormValidationErrors } = this.state;\n        if ( !isFormValidationErrors ){\n         \n\t\t\tcallApi('POST', config.API_URL + \"change-password\", data).then( res => {\n             \n                if(res){\n                    if( res.data.status ){\n                        Swal(' Đổi mật khẩu thành công!', res.data.message, 'success')\n                    } else {\n                        Swal('', res.data.message, 'error')\n                    }\n                }\n            });\n        } else {\n            Swal('Vui lòng nhập tất cả các ô...', '', 'error')\n\n        }\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n            <CSSTransitionGroup transitionName={config.PAGETRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n                <div className=\"grid simple\">\n                <div className=\"grid-body no-border\">\n                    \n                   \n                    <form noValidate onSubmit={this.handleFormSubmit}>\n                        <div className=\"col-lg-6 col-md-6\">\n                                \n                               \n                                \n                                <div className=\"form-group\">\n                                    <label>Mật khẩu mới</label>\n                                    <input \n                                        type=\"password\" \n                                        className=\"form-control\" \n                                        value={this.state.new_password} \n                                        onChange={this.onChangeForm} \n                                        name=\"new_password\" \n                                        placeholder=\"Mật khẩu mới\"/>\n                                        <Validator \n                                            isValidationError={this.isValidationError}\n                                            isFormSubmitted={this.state.submitted} \n                                            reference={{new_password : this.state.new_password}}\n                                            validationRules={{required:true, maxLength:20}} \n                                            validationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \"}}/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Xác nhận mật khẩu</label>\n                                    <input \n                                        type=\"password\" \n                                        className=\"form-control\" \n                                        value={this.state.confirm_password} \n                                        onChange={this.onChangeForm} \n                                        name=\"confirm_password\" \n                                        placeholder=\"Xác nhận mật khẩu\"/>\n                                        <Validator \n                                            isValidationError={this.isValidationError}\n                                            isFormSubmitted={this.state.submitted} \n                                            reference={{confirm_password : this.state.confirm_password}}\n                                            validationRules={{required:true, maxLength:20, equalTo:this.state.new_password}} \n                                            validationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \", equalTo: \"Không khớp với mật khẩu\"}}/>\n                                </div>\n                                \n\n                        </div>\n                        <div className=\"col-lg-12 col-md-12\">\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Lưu</Button>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n            \n            \n            </CSSTransitionGroup>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default ChangePassUser;"]},"metadata":{},"sourceType":"module"}