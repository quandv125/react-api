{"ast":null,"code":"import _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Orders/OrderPage.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport * as config from '../../constants/config';\nimport { connect } from 'react-redux';\nimport { actFetchOrdersRequest, actDeleteOrderRequest } from '../../actions/index';\nimport Swal from 'sweetalert2';\nimport { Redirect } from 'react-router-dom';\nimport OrderList from './../../components/Orders/OrderList'; // import { connectIO } from '../../socketIO/client';\n\nimport Modal from 'react-responsive-modal';\nimport ModalOrder from './../../components/Orders/ModalOrder';\nimport callApi from '../../utils/apiCaller';\n\nvar OrderPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrderPage, _Component);\n\n  function OrderPage(props) {\n    var _this;\n\n    _classCallCheck(this, OrderPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderPage).call(this, props));\n\n    _this.onDelete = function (id) {\n      Swal({\n        title: 'Are you sure?',\n        text: \"Are you sure you wish to delete this item?\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, Add it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this.props.onDeleteOrder(id);\n\n          Swal('Good job!', 'You clicked the button!', 'success');\n        }\n      });\n    };\n\n    _this.onOpenModal = function (data) {\n      _this.setState({\n        order_id: data.order_id,\n        open: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.onActionModal = function (id, data) {\n      callApi('PUT', config.ORDER_URL + id, data).then(function (res) {\n        if (res && res.data.status) {\n          _this.props.getOrders();\n\n          _this.setState({\n            open: false\n          });\n\n          Swal('Good job!', 'You clicked the button!', 'success');\n        }\n      });\n    };\n\n    _this.getToday = function () {\n      var tempDate = new Date(); // var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n\n      var day = tempDate.getDate() < 10 ? \"0\" + tempDate.getDate() : tempDate.getDate();\n      var month = tempDate.getMonth() + 1;\n      var year = tempDate.getFullYear();\n      var date = day + \"/\" + month + \"/\" + year;\n      return date;\n    };\n\n    _this.state = {\n      orders: [],\n      loggedOut: false,\n      open: false,\n      order_id: '' // connectIO(message => {\n      // \tthis.props.getOrders();\n      // \tSwal('Good job!','You clicked the button!','success')\n      // });\n\n    };\n    return _this;\n  }\n\n  _createClass(OrderPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextprops) {\n      this.setState({\n        loggedOut: nextprops.authentication.loggedOut\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loggedOut) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.orders !== null) {\n        var orders = this.props.orders.orders;\n      }\n\n      return React.createElement(CSSTransitionGroup, {\n        transitionName: config.PAGETRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"card_giftcard\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"semi-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Orders: \", this.getToday()))), React.createElement(OrderList, {\n        onDelete: this.onDelete,\n        onCloseModal: this.onCloseModal,\n        onOpenModal: this.onOpenModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, orders), React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ModalOrder, {\n        order_id: this.state.order_id,\n        action: this.onActionModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })))));\n    } // end render\n\n  }]);\n\n  return OrderPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    orders: state.orders,\n    authentication: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    getOrders: function getOrders() {\n      dispatch(actFetchOrdersRequest());\n    },\n    onDeleteOrder: function onDeleteOrder(id) {\n      dispatch(actDeleteOrderRequest(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPage);","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Orders/OrderPage.js"],"names":["React","Component","CSSTransitionGroup","config","connect","actFetchOrdersRequest","actDeleteOrderRequest","Swal","Redirect","OrderList","Modal","ModalOrder","callApi","OrderPage","props","onDelete","id","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","onDeleteOrder","onOpenModal","data","setState","order_id","open","onCloseModal","onActionModal","ORDER_URL","res","status","getOrders","getToday","tempDate","Date","day","getDate","month","getMonth","year","getFullYear","date","state","orders","loggedOut","nextprops","authentication","pathname","PAGETRANSITION","TRANSITIONSPEED","mapStateToProps","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport * as config from '../../constants/config';\nimport { connect } from 'react-redux';\nimport { actFetchOrdersRequest, actDeleteOrderRequest } from '../../actions/index';\nimport Swal from 'sweetalert2';\nimport { Redirect } from 'react-router-dom';\nimport OrderList from './../../components/Orders/OrderList'\n// import { connectIO } from '../../socketIO/client';\nimport Modal from 'react-responsive-modal';\nimport ModalOrder from './../../components/Orders/ModalOrder';\nimport callApi from '../../utils/apiCaller';\n\nclass OrderPage extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\torders : [],\n\t\t\tloggedOut: false,\n\t\t\topen: false,\n\t\t\torder_id: '',\n\t\t}\n\t\t// connectIO(message => {\n\t\t// \tthis.props.getOrders();\n\t\t// \tSwal('Good job!','You clicked the button!','success')\n\t\t// });\n\t}\n\n\tcomponentWillReceiveProps(nextprops) {\n        this.setState({\n            loggedOut: nextprops.authentication.loggedOut\n        });\n\t}\n\t\n\tcomponentWillMount(){\n\t\tthis.props.getOrders();\n\t}\n\n\tonDelete = (id) => {\n\t\tSwal({\n            title: 'Are you sure?',\n            text: \"Are you sure you wish to delete this item?\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, Add it!'\n          }).then((result) => {\n            if (result.value) {\n\t\t\t\tthis.props.onDeleteOrder(id)\n\t\t\t\tSwal('Good job!','You clicked the button!','success')\n            }\n        })\n\t}\n\n\tonOpenModal = (data) => {\n\t\tthis.setState({ order_id: data.order_id , open: true });\n\t};\n\t\n\tonCloseModal = () => {\n\t\tthis.setState({ open: false });\n    };\n\n\tonActionModal = (id, data) => {\n\t\tcallApi('PUT', config.ORDER_URL + id, data).then( res => {\n\t\t\tif(res && res.data.status){\n\t\t\t\tthis.props.getOrders();\n\t\t\t\tthis.setState({ open: false });\n\t\t\t\tSwal('Good job!','You clicked the button!','success')\n\t\t\t}\n\t\t});\n\t}\n\t\n\tgetToday = () => {\n\t\tvar tempDate = new Date();\n\t\t// var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n\t\tlet day = tempDate.getDate() < 10 ? \"0\"+tempDate.getDate() : tempDate.getDate();\n\t\tlet month = (tempDate.getMonth()+1);\n\t\tlet year = tempDate.getFullYear();\n\t\tvar date = day + \"/\" + month + \"/\" + year ;\n\t\treturn date;\n\t}\n\n\trender() {\n\t\tif(this.state.loggedOut){\n\t\t\treturn <Redirect to={{ pathname: \"/\"}}/>;\n\t\t}\n\t\t\n\t\tif (this.props.orders !== null) {\n\t\t\tvar {orders} = this.props.orders;\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<CSSTransitionGroup transitionName={config.PAGETRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n\t\t\t\t\n\t\t\t\t<div className=\"grid simple\">\n\t\t\t\t\t<div className=\"grid-body no-border\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"page-title\"> \n\t\t\t\t\t\t\t<i className=\"material-icons\">card_giftcard</i>\n\t\t\t\t\t\t\t<h3> <span className=\"semi-bold\">Orders: {this.getToday()}</span></h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<OrderList onDelete={this.onDelete} onCloseModal={this.onCloseModal} onOpenModal={this.onOpenModal}>\n\t\t\t\t\t\t\t{orders}\n\t\t\t\t\t\t</OrderList>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Modal open={this.state.open} onClose={this.onCloseModal} center>\n\t\t\t\t\t\t\t<ModalOrder order_id={this.state.order_id} action={this.onActionModal}/>\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</CSSTransitionGroup>\n\t\t);\n\t} // end render\n}\n\nconst mapStateToProps = (state) => {\n\tconsole.log(state);\n\treturn {\n\t\torders: state.orders,\n\t\tauthentication: state.authentication\n\t};\n}\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tgetOrders : () => {\n\t\t\tdispatch(actFetchOrdersRequest());\n\t\t},\n\t\tonDeleteOrder : (id) => {\n\t\t\tdispatch(actDeleteOrderRequest(id));\n\t\t}\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPage);\n"]},"metadata":{},"sourceType":"module"}