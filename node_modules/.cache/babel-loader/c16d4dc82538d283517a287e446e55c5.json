{"ast":null,"code":"import * as Types from '../constants/ActionType'; // import {findIndex} from 'lodash';\n\nvar initialState = {\n  status: null,\n  customers: null\n};\n\nvar customers = function customers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.FETCH_CUSTOMERS:\n      if (action.customers.status) {\n        state = {\n          status: action.customers.status,\n          customers: action.customers.data\n        };\n      }\n\n      return state;\n    // case Types.DELETE_customers:\n    //     var index = findIndex(state.customers, { id: action.id });\n    //     if (index !== -1) {\n    // \t\tstate.customers.splice(index, 1);\n    //     }\n    //     state = {\n    //         status: false,\n    //         customers: state.customers\n    //     }\n    //     return state;\n    // case Types.ADD_customers: \n    //     state = { \n    //         status: action.user.status, \n    //         customers: action.user,\n    //         preUser: !action.user.status ? action.userOld : null\n    //     };\n    //     return state;\n    // case Types.UPDATE_customers:\n    //     let {id} = action.user.user; \n    //     index = findIndex(state.customers, { id: id });\n    //     if (index !== -1) {\n    //         state.customers[index] = action.user.user;\n    //     }\n    //     state = {\n    //         status: action.user.status,\n    //         customers: action.user\n    //     }\n    //     return state;\n    // case Types.GET_USER: \n    //     if (action.user){\n    //         state = {\n    //             userEdit: action.user\n    //         }\n    //     }\n    //     return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default customers;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/reducers/customers.js"],"names":["Types","initialState","status","customers","state","action","type","FETCH_CUSTOMERS","data"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB,C,CACA;;AACA,IAAIC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAAnB;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAEhD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,KAAK,CAACO,eAAX;AACI,UAAIF,MAAM,CAACF,SAAP,CAAiBD,MAArB,EAA4B;AACxBE,QAAAA,KAAK,GAAG;AACJF,UAAAA,MAAM,EAAEG,MAAM,CAACF,SAAP,CAAiBD,MADrB;AAEJC,UAAAA,SAAS,EAAEE,MAAM,CAACF,SAAP,CAAiBK;AAFxB,SAAR;AAIH;;AACD,aAAOJ,KAAP;AACJ;AACA;AACA;AACN;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOA,KAAP;AA/CR;AAiDH,CAnDD;;AAqDA,eAAeD,SAAf","sourcesContent":["import * as Types from '../constants/ActionType';\n// import {findIndex} from 'lodash';\nvar initialState = { status: null, customers: null };\n\nconst customers = (state = initialState, action) => {\n   \n    switch(action.type){\n        case Types.FETCH_CUSTOMERS:\n            if (action.customers.status){\n                state = {\n                    status: action.customers.status, \n                    customers: action.customers.data\n                }\n            }\n            return state;\n        // case Types.DELETE_customers:\n        //     var index = findIndex(state.customers, { id: action.id });\n        //     if (index !== -1) {\n\t\t// \t\tstate.customers.splice(index, 1);\n        //     }\n        //     state = {\n        //         status: false,\n        //         customers: state.customers\n        //     }\n        //     return state;\n        // case Types.ADD_customers: \n            \n        //     state = { \n        //         status: action.user.status, \n        //         customers: action.user,\n        //         preUser: !action.user.status ? action.userOld : null\n        //     };\n        //     return state;\n        // case Types.UPDATE_customers:\n \n        //     let {id} = action.user.user; \n        //     index = findIndex(state.customers, { id: id });\n        //     if (index !== -1) {\n        //         state.customers[index] = action.user.user;\n        //     }\n        //     state = {\n        //         status: action.user.status,\n        //         customers: action.user\n        //     }\n        //     return state;\n        // case Types.GET_USER: \n        //     if (action.user){\n        //         state = {\n        //             userEdit: action.user\n        //         }\n        //     }\n        //     return state;\n        default: \n            return state;\n    }\n}\n\nexport default customers;"]},"metadata":{},"sourceType":"module"}