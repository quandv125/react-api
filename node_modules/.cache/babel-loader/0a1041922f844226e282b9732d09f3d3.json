{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Login/ForgotForm.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Validator from 'react-forms-validator';\nimport callApi from '../../utils/apiCaller';\nimport * as config from '../../constants/config';\n\nvar ForgotForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotForm, _Component);\n\n  function ForgotForm(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotForm).call(this, props));\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSave = function (e) {\n      e.preventDefault();\n      var email = _this.state.email;\n      var data = {\n        email: email\n      };\n\n      if (email !== '' && !_this.state.isFormValidationErrors) {\n        callApi('POST', config.API_URL + 'forgot-password', data).then(function (res) {\n          if (res && res.data.status) {\n            console.log(res); //     this.setState({\n            //         customer_data: res.data.orders\n            //     });\t\n          }\n        });\n      } else {\n        _this.setState({\n          error: true\n        });\n      }\n    };\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.showError = function (message) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" \", \" \");\n    };\n\n    _this.state = {\n      email: \"\",\n      error: false\n    };\n    _this.flag = true;\n    return _this;\n  }\n\n  _createClass(ForgotForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.error && this.showError(\"This field is required\"), React.createElement(\"form\", {\n        className: \"animated fadeIn validate\",\n        noValidate: true,\n        onSubmit: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.onChangeForm,\n        name: \"email\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          email: this.state.email\n        },\n        validationRules: {\n          email: true,\n          required: true,\n          minLength: 5,\n          maxLength: 50\n        },\n        validationMessages: {\n          email: \"invalid email address\",\n          required: \"This field is required\",\n          minLength: \"Not a valid Min length: 5 \",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-group col-md-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-cons\",\n        variant: \"contained\",\n        style: styles.buttonLogin,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return ForgotForm;\n}(Component);\n\nvar styles = {};\nstyles.buttonLogin = {\n  fontSize: '14px'\n};\nexport default ForgotForm;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Login/ForgotForm.js"],"names":["React","Component","Button","Validator","callApi","config","ForgotForm","props","onChangeForm","event","target","name","value","type","checked","setState","handleSave","e","preventDefault","email","state","data","isFormValidationErrors","API_URL","then","res","status","console","log","error","isValidationError","flag","showError","message","submitted","required","minLength","maxLength","styles","buttonLogin","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Validator from 'react-forms-validator';\nimport callApi from '../../utils/apiCaller';\nimport * as config from '../../constants/config';\n\nclass ForgotForm extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            email: \"\",\n            error: false\n        };\n        this.flag = true;\n    }\n\n    onChangeForm = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked : target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n        });\n\t}\n\n    handleSave = (e) => {\n        e.preventDefault();\n        var {email} = this.state;\n\t\tvar data = { email: email};\n\t\tif(email !== '' && !this.state.isFormValidationErrors){\n            callApi('POST', config.API_URL + 'forgot-password' , data).then(res => {\n                if(res && res.data.status){\n                    console.log(res);\n                //     this.setState({\n                //         customer_data: res.data.orders\n                //     });\t\n                }\n            });\n\t\t} else {\n\t\t\tthis.setState({\n                error: true\n            });\n\t\t}\n    }\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n       }\n       \n    showError = (message) => {\n        return \t<div className=\"alert alert-danger\"> {} </div>;\n    }\n\n    render() {\n        return (\n            <div>\n                \n                {this.state.error && this.showError(\"This field is required\") }\n\n                <form className=\"animated fadeIn validate\" noValidate onSubmit={this.handleSave}>\n                    <div className=\"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\">\n                        <div className=\"register-form\">\n                        <input \n                            type=\"text\" \n                            value={this.state.email} \n                            onChange={this.onChangeForm} \n                            name=\"email\" \n                            placeholder=\"Email\"/>\n                        <Validator \n                            isValidationError={this.isValidationError}\n                            isFormSubmitted={this.state.submitted} \n                            reference={{email : this.state.email}}\n                            validationRules={{email:true, required: true, minLength: 5,maxLength: 50}} \n                            validationMessages={{ email: \"invalid email address\", required: \"This field is required\", minLength: \"Not a valid Min length: 5 \",maxLength: \"Not a valid Max length: 10 \"}}/>\n                            \n                        </div>\n                         \n                    </div>\n                    <div className=\"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\">\n                        <div className=\"control-group col-md-12 text-center\">\n                            \n                            <Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" style={ styles.buttonLogin } color=\"primary\">\n                                Submit\n                            </Button>\n                            \n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst styles = {};\nstyles.buttonLogin = {\n\tfontSize: '14px'\n};\n\nexport default ForgotForm;"]},"metadata":{},"sourceType":"module"}