{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _cell = require('./cell');\n\nvar _cell2 = _interopRequireDefault(_cell);\n\nvar _selectionCell = require('./row-selection/selection-cell');\n\nvar _selectionCell2 = _interopRequireDefault(_selectionCell);\n\nvar _rowEventDelegater = require('./row-event-delegater');\n\nvar _rowEventDelegater2 = _interopRequireDefault(_rowEventDelegater);\n\nvar _const = require('./const');\n\nvar _const2 = _interopRequireDefault(_const);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/prop-types: 0 */\n\n/* eslint react/no-array-index-key: 0 */\n\n\nvar Row = function (_eventDelegater) {\n  _inherits(Row, _eventDelegater);\n\n  function Row() {\n    _classCallCheck(this, Row);\n\n    return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).apply(this, arguments));\n  }\n\n  _createClass(Row, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          row = _props.row,\n          columns = _props.columns,\n          keyField = _props.keyField,\n          rowIndex = _props.rowIndex,\n          className = _props.className,\n          style = _props.style,\n          attrs = _props.attrs,\n          cellEdit = _props.cellEdit,\n          selected = _props.selected,\n          selectRow = _props.selectRow,\n          selectable = _props.selectable,\n          editableRow = _props.editable;\n\n      var mode = cellEdit.mode,\n          onStart = cellEdit.onStart,\n          EditingCell = cellEdit.EditingCell,\n          editingRowIdx = cellEdit.ridx,\n          editingColIdx = cellEdit.cidx,\n          CLICK_TO_CELL_EDIT = cellEdit.CLICK_TO_CELL_EDIT,\n          DBCLICK_TO_CELL_EDIT = cellEdit.DBCLICK_TO_CELL_EDIT,\n          rest = _objectWithoutProperties(cellEdit, ['mode', 'onStart', 'EditingCell', 'ridx', 'cidx', 'CLICK_TO_CELL_EDIT', 'DBCLICK_TO_CELL_EDIT']);\n\n      var key = _utils2.default.get(row, keyField);\n\n      var hideSelectColumn = selectRow.hideSelectColumn;\n      var trAttrs = this.delegate(attrs);\n      return _react2.default.createElement('tr', _extends({\n        style: style,\n        className: className\n      }, trAttrs), selectRow.mode !== _const2.default.ROW_SELECT_DISABLED && !hideSelectColumn ? _react2.default.createElement(_selectionCell2.default, _extends({}, selectRow, {\n        rowKey: key,\n        rowIndex: rowIndex,\n        selected: selected,\n        disabled: !selectable\n      })) : null, columns.map(function (column, index) {\n        if (!column.hidden) {\n          var dataField = column.dataField;\n\n          var content = _utils2.default.get(row, dataField);\n\n          var editable = _utils2.default.isDefined(column.editable) ? column.editable : true;\n          if (dataField === keyField || !editableRow) editable = false;\n\n          if (_utils2.default.isFunction(column.editable)) {\n            editable = column.editable(content, row, rowIndex, index);\n          }\n\n          if (rowIndex === editingRowIdx && index === editingColIdx) {\n            var editCellstyle = column.editCellStyle || {};\n            var editCellclasses = column.editCellClasses;\n\n            if (_utils2.default.isFunction(column.editCellStyle)) {\n              editCellstyle = column.editCellStyle(content, row, rowIndex, index);\n            }\n\n            if (_utils2.default.isFunction(column.editCellClasses)) {\n              editCellclasses = column.editCellClasses(content, row, rowIndex, index);\n            }\n\n            return _react2.default.createElement(EditingCell, _extends({\n              key: content + '-' + index,\n              row: row,\n              rowIndex: rowIndex,\n              column: column,\n              columnIndex: index,\n              className: editCellclasses,\n              style: editCellstyle\n            }, rest));\n          }\n\n          return _react2.default.createElement(_cell2.default, {\n            key: content + '-' + index,\n            row: row,\n            rowIndex: rowIndex,\n            columnIndex: index,\n            column: column,\n            onStart: onStart,\n            editable: editable,\n            clickToEdit: mode === CLICK_TO_CELL_EDIT,\n            dbclickToEdit: mode === DBCLICK_TO_CELL_EDIT\n          });\n        }\n\n        return false;\n      }));\n    }\n  }]);\n\n  return Row;\n}((0, _rowEventDelegater2.default)(_react.Component));\n\nRow.propTypes = {\n  row: _propTypes2.default.object.isRequired,\n  rowIndex: _propTypes2.default.number.isRequired,\n  columns: _propTypes2.default.array.isRequired,\n  style: _propTypes2.default.object,\n  className: _propTypes2.default.string,\n  attrs: _propTypes2.default.object\n};\nRow.defaultProps = {\n  editable: true,\n  style: {},\n  className: null,\n  attrs: {}\n};\nexports.default = Row;","map":null,"metadata":{},"sourceType":"script"}