{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Users/ChangePassUser.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Validator from 'react-forms-validator'; // import { Link } from 'react-router-dom';\n\nimport callApi from './../../utils/apiCaller';\nimport * as config from './../../constants/config';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\n\nvar ChangePassUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePassUser, _Component);\n\n  function ChangePassUser(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePassUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePassUser).call(this, props));\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        submitted: true\n      });\n\n      var id = _this.props.match.params.id;\n      var new_password = _this.state.new_password;\n      var data = {\n        password: new_password\n      };\n      var isFormValidationErrors = _this.state.isFormValidationErrors;\n\n      if (!isFormValidationErrors) {\n        callApi('POST', config.USER_URL + \"/change-password-user/\" + id, data).then(function (res) {\n          console.log(res); // if(res){\n          //     if( res.data.status ){\n          //         Swal(' Đổi mật khẩu thành công!', res.data.message, 'success')\n          //     } else {\n          //         Swal('', res.data.message, 'error')\n          //     }\n          // }\n        });\n      } else {\n        Swal('Vui lòng nhập tất cả các ô...', '', 'error');\n      }\n    };\n\n    _this.state = {\n      new_password: '',\n      confirm_password: '',\n      isFormValidationErrors: true,\n      submitted: false\n    };\n    return _this;\n  }\n\n  _createClass(ChangePassUser, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CSSTransitionGroup, {\n        transitionName: config.PAGETRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/users\",\n        className: \"margin-right20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-cons\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"arrow_back\"))), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.new_password,\n        onChange: this.onChangeForm,\n        name: \"new_password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          new_password: this.state.new_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: this.state.confirm_password,\n        onChange: this.onChangeForm,\n        name: \"confirm_password\",\n        placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          confirm_password: this.state.confirm_password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 20,\n          equalTo: this.state.new_password\n        },\n        validationMessages: {\n          required: \"Trường này không được để trống\",\n          maxLength: \"Độ dài tối đa là: 20 kí tự \",\n          equalTo: \"Không khớp với mật khẩu\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"L\\u01B0u\")))))));\n    }\n  }]);\n\n  return ChangePassUser;\n}(Component);\n\nexport default ChangePassUser;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Users/ChangePassUser.js"],"names":["React","Component","CSSTransitionGroup","Validator","callApi","config","Button","Swal","ChangePassUser","props","isValidationError","flag","setState","isFormValidationErrors","onChangeForm","event","target","name","value","type","checked","handleFormSubmit","preventDefault","submitted","id","match","params","new_password","state","data","password","USER_URL","then","res","console","log","confirm_password","PAGETRANSITION","TRANSITIONSPEED","required","maxLength","equalTo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Validator from 'react-forms-validator';\n// import { Link } from 'react-router-dom';\nimport callApi from './../../utils/apiCaller';\nimport * as config from './../../constants/config';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\n\nclass ChangePassUser extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            new_password: '',\n            confirm_password: '',\n            isFormValidationErrors : true,\n\t\t\tsubmitted: false,\n        }\n    }\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n   \t}\n\n    onChangeForm = (event) => {\n        var target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ submitted:true });\n        var {id} = this.props.match.params;\n        \n\t\tvar { new_password} = this.state;\n\t\tvar data = { \n\t\t\tpassword: new_password,\n\t\t}; \n\t\tlet { isFormValidationErrors } = this.state;\n        if ( !isFormValidationErrors ){\n           \n\t\t\tcallApi('POST', config.USER_URL + \"/change-password-user/\" + id, data).then( res => {\n                console.log(res);\n                // if(res){\n                //     if( res.data.status ){\n                //         Swal(' Đổi mật khẩu thành công!', res.data.message, 'success')\n                //     } else {\n                //         Swal('', res.data.message, 'error')\n                //     }\n                // }\n            });\n        } else {\n            Swal('Vui lòng nhập tất cả các ô...', '', 'error')\n\n        }\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n            <CSSTransitionGroup transitionName={config.PAGETRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n                <div className=\"grid simple\">\n                <div className=\"grid-body no-border\">\n                    <Link to=\"/users\" className=\"margin-right20\">\n                        <Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" color=\"primary\">\n                        <i className=\"material-icons\">arrow_back</i>\n                        </Button>\t\n                    </Link>\n                   \n                    <form noValidate onSubmit={this.handleFormSubmit}>\n                        <div className=\"col-lg-6 col-md-6\">\n                                \n                                <div className=\"form-group\">\n                                    <label>Mật khẩu mới</label>\n                                    <input \n                                        type=\"password\" \n                                        className=\"form-control\" \n                                        value={this.state.new_password} \n                                        onChange={this.onChangeForm} \n                                        name=\"new_password\" \n                                        placeholder=\"Mật khẩu mới\"/>\n                                        <Validator \n                                            isValidationError={this.isValidationError}\n                                            isFormSubmitted={this.state.submitted} \n                                            reference={{new_password : this.state.new_password}}\n                                            validationRules={{required:true, maxLength:20}} \n                                            validationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \"}}/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Xác nhận mật khẩu</label>\n                                    <input \n                                        type=\"password\" \n                                        className=\"form-control\" \n                                        value={this.state.confirm_password} \n                                        onChange={this.onChangeForm} \n                                        name=\"confirm_password\" \n                                        placeholder=\"Xác nhận mật khẩu\"/>\n                                        <Validator \n                                            isValidationError={this.isValidationError}\n                                            isFormSubmitted={this.state.submitted} \n                                            reference={{confirm_password : this.state.confirm_password}}\n                                            validationRules={{required:true, maxLength:20, equalTo:this.state.new_password}} \n                                            validationMessages={{ required: \"Trường này không được để trống\", maxLength: \"Độ dài tối đa là: 20 kí tự \", equalTo: \"Không khớp với mật khẩu\"}}/>\n                                </div>\n                                \n\n                        </div>\n                        <div className=\"col-lg-12 col-md-12\">\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Lưu</Button>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n            \n            \n            </CSSTransitionGroup>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default ChangePassUser;"]},"metadata":{},"sourceType":"module"}