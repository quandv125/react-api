{"ast":null,"code":"import * as Types from './../constants/ActionType';\nimport * as config from './../constants/config';\nimport apiCaller from './../utils/apiCaller'; // Product\n\nexport var actFetchProductsRequest = function actFetchProductsRequest() {// return (dispatch) => {\n  //     return apiCaller('GET', config.API_URL + config.PRODUCTS  , null).then( res => {\n  //         if(res){\n  //             dispatch(actFetchProducts(res.data));\n  //         }\n  //     });\n  // }\n};\nexport var actFetchProducts = function actFetchProducts(products) {\n  return {\n    type: Types.FETCH_PRODUCTS,\n    products: products\n  };\n}; // Users\n\nexport var actFetchUsersRequest = function actFetchUsersRequest() {\n  return function (dispatch) {\n    return apiCaller('GET', config.USER_URL, null).then(function (res) {\n      if (res) {\n        dispatch(actFetchUsers(res.data));\n      }\n    });\n  };\n};\nexport var actFetchUsers = function actFetchUsers(users) {\n  return {\n    type: Types.FETCH_USERS,\n    users: users\n  };\n}; // Delete User    \n\nexport var actDeleteUserRequest = function actDeleteUserRequest(id) {\n  return function (dispatch) {\n    return apiCaller('DELETE', config.USER_URL + id, null).then(function (res) {\n      dispatch(actDeleteUser(id));\n    });\n  };\n};\nexport var actDeleteUser = function actDeleteUser(id) {\n  return {\n    type: Types.DELETE_USERS,\n    id: id\n  };\n}; // Add User\n\nexport var actAddUser = function actAddUser(user, userOld) {\n  return {\n    type: Types.ADD_USERS,\n    user: user,\n    userOld: userOld\n  };\n};\nexport var actAddUserRequest = function actAddUserRequest(user) {\n  return function (dispatch) {\n    return apiCaller('POST', config.USER_URL, user).then(function (res) {\n      dispatch(actAddUser(res.data, user));\n    });\n  };\n}; //\n\nexport var actError = function actError(status, msg) {\n  return {\n    type: Types.ERROR,\n    status: status,\n    msg: msg\n  };\n};\nexport var actEditUser = function actEditUser(user) {\n  return {\n    type: Types.UPDATE_USERS,\n    user: user\n  };\n};\nexport var actEditUserRequest = function actEditUserRequest(user, id) {\n  return function (dispatch) {\n    return apiCaller('PUT', config.USER_URL + id, user).then(function (res) {\n      if (res.data.status) {\n        dispatch(actEditUser(res.data));\n      }\n    });\n  };\n}; // get infomation user\n\nexport var actGetUserRequest = function actGetUserRequest(id) {\n  return function (dispatch) {\n    return apiCaller('GET', config.USER_URL + id, null).then(function (res) {\n      dispatch(actGetUser(res.data));\n    });\n  };\n};\nexport var actGetUser = function actGetUser(user) {\n  return {\n    type: Types.GET_USER,\n    user: user\n  };\n}; // Login & logout\n\nexport var actLogin = function actLogin(user) {\n  return {\n    type: Types.LOGIN,\n    user: user\n  };\n};\nexport var actLoginRequest = function actLoginRequest(user) {\n  return function (dispatch) {\n    return apiCaller('POST', config.LOGIN_URL, user).then(function (res) {\n      dispatch(actLogin(res.data));\n    });\n  };\n};\nexport var actLogout = function actLogout() {\n  return {\n    type: Types.LOGOUT\n  };\n};\nexport var actLogoutRequest = function actLogoutRequest() {\n  return function (dispatch) {\n    return apiCaller('POST', config.LOGOUT_URL, null).then(function (res) {\n      if (res.data.status) {\n        dispatch(actLogout());\n      } else {\n        alert(\"logout error\");\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/actions/index.js"],"names":["Types","config","apiCaller","actFetchProductsRequest","actFetchProducts","products","type","FETCH_PRODUCTS","actFetchUsersRequest","dispatch","USER_URL","then","res","actFetchUsers","data","users","FETCH_USERS","actDeleteUserRequest","id","actDeleteUser","DELETE_USERS","actAddUser","user","userOld","ADD_USERS","actAddUserRequest","actError","status","msg","ERROR","actEditUser","UPDATE_USERS","actEditUserRequest","actGetUserRequest","actGetUser","GET_USER","actLogin","LOGIN","actLoginRequest","LOGIN_URL","actLogout","LOGOUT","actLogoutRequest","LOGOUT_URL","alert"],"mappings":"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","sourcesContent":["import * as Types from './../constants/ActionType';\nimport * as config from './../constants/config';\nimport apiCaller from './../utils/apiCaller';\n\n// Product\nexport const actFetchProductsRequest = () => {\n    // return (dispatch) => {\n    //     return apiCaller('GET', config.API_URL + config.PRODUCTS  , null).then( res => {\n    //         if(res){\n    //             dispatch(actFetchProducts(res.data));\n\n    //         }\n    //     });\n    // }\n}\n\nexport const actFetchProducts = (products) => {\n    return {\n        type: Types.FETCH_PRODUCTS,\n        products\n    }\n}\n// Users\nexport const actFetchUsersRequest = () => {\n    return (dispatch) => {\n        return apiCaller('GET', config.USER_URL  , null).then( res => {     \n            if(res){     \n                dispatch(actFetchUsers(res.data));\n            }\n\t\t});\n    }\n}\n\nexport const actFetchUsers = (users) => {\n    return {\n        type: Types.FETCH_USERS,\n        users\n    }\n}\n// Delete User    \nexport const actDeleteUserRequest = (id) => {\n    return (dispatch) => {\n        return apiCaller('DELETE', config.USER_URL + id , null).then( res => {\n\t\t\tdispatch(actDeleteUser(id));\n\t\t}); \n    }\n}\n\nexport const actDeleteUser = (id) => {\n    return {\n        type: Types.DELETE_USERS,\n        id\n    }\n}\n// Add User\nexport const actAddUser = (user, userOld) => {\n    return {\n        type: Types.ADD_USERS,\n        user,\n        userOld\n    }\n}\n\nexport const actAddUserRequest = (user) => {\n    return (dispatch) => {\n        return apiCaller('POST', config.USER_URL , user).then( res => {\n            dispatch(actAddUser(res.data, user));\n        });\n    }\n}\n//\nexport const actError = (status, msg) => {\n    return {\n        type: Types.ERROR,\n        status,\n        msg\n    }\n}\nexport const actEditUser = (user) => {\n    return {\n        type: Types.UPDATE_USERS,\n        user\n    }\n}\n\nexport const actEditUserRequest = (user, id) => {\n    return (dispatch) => { \n        return apiCaller('PUT', config.USER_URL + id , user).then( res => {   \n            if (res.data.status) {\n                dispatch(actEditUser(res.data));\n            }\n        });\n    }\n}\n// get infomation user\nexport const actGetUserRequest = id => {\n    return (dispatch) => {\n        return apiCaller('GET', config.USER_URL +id, null).then(res => {\n            dispatch(actGetUser(res.data));\n        });\n    }\n}\n\nexport const actGetUser = (user) => {\n    return {\n        type: Types.GET_USER,\n        user\n    }\n}\n\n\n// Login & logout\nexport const actLogin = (user) => {\n    return {\n        type: Types.LOGIN,\n        user\n    }\n}\n\nexport const actLoginRequest = (user) => {\n    return dispatch => {\n        return apiCaller('POST', config.LOGIN_URL, user).then(res => {\n                dispatch(actLogin(res.data));\n        });\n    }\n}\n\nexport const actLogout = () => {\n    return {\n        type: Types.LOGOUT,\n    }\n}\n\nexport const actLogoutRequest = () => {\n    return dispatch => {\n        return apiCaller('POST', config.LOGOUT_URL, null).then(res => {           \n            if(res.data.status){\n                dispatch(actLogout());\n            } else {\n                alert(\"logout error\");\n            }\n        });   \n    }\n}"]},"metadata":{},"sourceType":"module"}