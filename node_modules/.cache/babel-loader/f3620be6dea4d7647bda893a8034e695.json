{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Users/MyAccount.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group'; // import { Link } from 'react-router-dom';\n\nimport Validator from 'react-forms-validator';\nimport callApi from './../../utils/apiCaller';\nimport * as config from '../../constants/config';\nimport Button from '@material-ui/core/Button';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport Radio from '@material-ui/core/Radio';\n\nvar MyAccount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyAccount, _Component);\n\n  function MyAccount(props) {\n    var _this;\n\n    _classCallCheck(this, MyAccount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyAccount).call(this, props));\n\n    _this.returnGender = function (gender) {\n      return gender === config.GENDER_MALE ? 'male' : 'female';\n    };\n\n    _this.convertNumberToDate = function (date) {\n      // date => 2018-10-25 15:28:46\n      var date_time = moment(date, \"YYYY-MM-DD\");\n      return date_time;\n    };\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleChangeDate = function (date) {\n      var valueOfInput = date ? date.format('YYYY-MM-DD H:mm:ss') : null;\n\n      _this.setState({\n        birthday: valueOfInput,\n        startDate: date\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        // Input, checkbox, Radio, Select\n        var value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n\n        _this.setState(_defineProperty({\n          gender: value === 'male' ? config.GENDER_MALE : config.GENDER_FEMALE\n        }, name, value));\n      };\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        submitted: true\n      });\n\n      var _this$state = _this.state,\n          id = _this$state.id,\n          username = _this$state.username,\n          firstname = _this$state.firstname,\n          lastname = _this$state.lastname,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          address = _this$state.address,\n          gender = _this$state.gender,\n          birthday = _this$state.birthday;\n      var data = {\n        username: username,\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        phone: phone,\n        address: address,\n        gender: gender,\n        birthday: birthday\n      };\n      var isFormValidationErrors = _this.state.isFormValidationErrors;\n\n      if (!isFormValidationErrors) {\n        console.log(data); // callApi('POST', config.API_URL + \"change-password\", data).then( res => {\n        //     console.log(res);\n        //     if(res){\n        //         if( res.data.status ){\n        //             Swal(' Good job!', res.data.message, 'success')\n        //         } else {\n        //             Swal('Oops...', res.data.message, 'error')\n        //         }\n        //     }\n        // });\n      } else {\n        Swal('Oops...', 'Something went wrong!', 'error');\n      }\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      firstname: '',\n      lastname: '',\n      address: '',\n      phone: '',\n      birthday: '',\n      startDate: null,\n      gender: config.GENDER_FEMALE,\n      selectedValue: 'male',\n      submitted: false,\n      isFormValidationErrors: true\n    };\n    return _this;\n  }\n\n  _createClass(MyAccount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      callApi('POST', config.API_URL + \"me\", null).then(function (res) {\n        var data = res.data;\n        console.log(res.data);\n\n        _this2.setState({\n          id: data.id ? data.id : '',\n          username: data.username ? data.username : '',\n          firstname: data.firstname ? data.firstname : '',\n          lastname: data.lastname ? data.lastname : '',\n          email: data.email ? data.email : '',\n          address: data.address ? data.address : '',\n          phone: data.phone ? data.phone : '',\n          selectedValue: data.gender ? _this2.returnGender(data.gender) : 'male',\n          startDate: data.birthday ? _this2.convertNumberToDate(data.birthday) : null\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(CSSTransitionGroup, {\n        transitionName: config.PAGETRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-title no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"My Account\")), React.createElement(\"div\", {\n        className: \"grid-body no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 col-lg-3 user-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-info-wrapper sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-wrapper1 sm text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://backend.ssllabel.com/images/thumbnails/300_5b3efede24593.jpg\",\n        alt: \"\",\n        \"data-src\": \"https://backend.ssllabel.com/images/thumbnails/300_5b3efede24593.jpg\",\n        \"data-src-retina\": \"https://backend.ssllabel.com/images/thumbnails/300_5b3efede24593.jpg\",\n        width: \"200\",\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"availability-bubble online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"quandv\"), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Quan Duong\"), React.createElement(\"ul\", {\n        className: \"list-unstyled text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-map-marker m-r-xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), \"   HN\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-envelope m-r-xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), \" quandv.125@gmail.com\")))), React.createElement(\"div\", {\n        className: \"col-md-9 col-lg-9 m-t-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"T\\xE0i kho\\u1EA3n  \", React.createElement(\"a\", {\n        href: \"https://backend.ssllabel.com/admin/users/edit/21\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), \" \"), React.createElement(\"div\", {\n        className: \"progress progress-xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-success\",\n        role: \"progressbar\",\n        \"aria-valuenow\": \"100\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"UserName\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.username,\n        onChange: this.onChangeForm,\n        name: \"username\",\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          username: this.state.username\n        },\n        validationRules: {\n          required: true,\n          minLength: 5,\n          maxLength: 10\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          minLength: \"Not a valid Min length: 5 \",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"FirstName\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.firstname,\n        onChange: this.onChangeForm,\n        name: \"firstname\",\n        placeholder: \"firstname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          firstname: this.state.firstname\n        },\n        validationRules: {\n          required: true,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.address,\n        onChange: this.onChangeForm,\n        name: \"address\",\n        placeholder: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          address: this.state.address\n        },\n        validationRules: {\n          required: true,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Male\"), React.createElement(Radio, {\n        checked: this.state.selectedValue === 'male',\n        onChange: this.handleChange('selectedValue'),\n        value: \"male\",\n        name: \"gender\",\n        \"aria-label\": \"male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Female\"), React.createElement(Radio, {\n        checked: this.state.selectedValue === 'female',\n        onChange: this.handleChange('selectedValue'),\n        value: \"female\",\n        name: \"gender\",\n        \"aria-label\": \"female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.email,\n        onChange: this.onChangeForm,\n        name: \"email\",\n        placeholder: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          email: this.state.email\n        },\n        validationRules: {\n          required: true,\n          email: true\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          email: \"Not a valid email\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"LastName\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.lastname,\n        onChange: this.onChangeForm,\n        name: \"lastname\",\n        placeholder: \"lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          lastname: this.state.lastname\n        },\n        validationRules: {\n          required: true,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Phone (Ex: +84 987654321)\"), React.createElement(\"div\", {\n        className: \"input-group transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"(+84)\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.phone,\n        onChange: this.onChangeForm,\n        name: \"phone\",\n        placeholder: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          phone: this.state.phone\n        },\n        validationRules: {\n          required: true\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          number: \"Not a valid number\",\n          maxLength: \"Not a valid Max length: 11 character\",\n          minLength: \"Not a vaild min length is 9 character\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Birthday\"), React.createElement(DatePicker, {\n        className: \"form-control\",\n        dateFormat: \"DD-MM-YYYY\",\n        placeholderText: \"Ex: 25-10-2018\",\n        name: \"birthday\",\n        todayButton: \"Today\",\n        withPortal: true // peekNextMonth\n        // showMonthDropdown\n        ,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        selected: this.state.startDate,\n        onChange: this.handleChangeDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Save\")))))))));\n    }\n  }]);\n\n  return MyAccount;\n}(Component);\n\nexport default MyAccount;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Users/MyAccount.js"],"names":["React","Component","CSSTransitionGroup","Validator","callApi","config","Button","DatePicker","moment","Swal","Radio","MyAccount","props","returnGender","gender","GENDER_MALE","convertNumberToDate","date","date_time","isValidationError","flag","setState","isFormValidationErrors","onChangeForm","event","target","name","value","type","checked","handleChangeDate","valueOfInput","format","birthday","startDate","handleChange","GENDER_FEMALE","handleFormSubmit","preventDefault","submitted","state","id","username","firstname","lastname","email","phone","address","data","console","log","selectedValue","API_URL","then","res","PAGETRANSITION","TRANSITIONSPEED","required","minLength","maxLength","number"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,wBAAnC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;IACMC,S;;;;;AAEF,qBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;;AADgB,UAqCpBC,YArCoB,GAqCL,UAACC,MAAD,EAAY;AAC7B,aAAOA,MAAM,KAAKT,MAAM,CAACU,WAAlB,GAAgC,MAAhC,GAAyC,QAAhD;AACA,KAvCsB;;AAAA,UAyCpBC,mBAzCoB,GAyCE,UAACC,IAAD,EAAU;AAClC;AACA,UAAIC,SAAS,GAAGV,MAAM,CAACS,IAAD,EAAO,YAAP,CAAtB;AACA,aAAOC,SAAP;AACA,KA7CsB;;AAAA,UAgDpBC,iBAhDoB,GAgDA,UAACC,IAAD,EAAU;AAChC,YAAKC,QAAL,CAAc;AAACC,QAAAA,sBAAsB,EAACF;AAAxB,OAAd;AACG,KAlDmB;;AAAA,UAoDpBG,YApDoB,GAoDL,UAACC,KAAD,EAAW;AACtB,UAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACN,UAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACA,UAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,KAAgB,UAAhB,GAA4BH,MAAM,CAACI,OAAnC,GAA2CJ,MAAM,CAACE,KAA9D;;AACA,YAAKN,QAAL,qBACEK,IADF,EACSC,KADT;AAGG,KA3DmB;;AAAA,UA6DpBG,gBA7DoB,GA6DD,UAACb,IAAD,EAAU;AAC/B,UAAMc,YAAY,GAAGd,IAAI,GAAGA,IAAI,CAACe,MAAL,CAAY,oBAAZ,CAAH,GAAuC,IAAhE;;AACA,YAAKX,QAAL,CAAc;AACbY,QAAAA,QAAQ,EAAEF,YADG;AAEXG,QAAAA,SAAS,EAAEjB;AAFA,OAAd;AAIA,KAnEsB;;AAAA,UAqEvBkB,YArEuB,GAqER,UAAAT,IAAI;AAAA,aAAI,UAAAF,KAAK,EAAI;AAC/B;AACA,YAAIG,KAAK,GAAGH,KAAK,CAACC,MAAN,CAAaG,IAAb,KAAsB,UAAtB,GAAkCJ,KAAK,CAACC,MAAN,CAAaI,OAA/C,GAAyDL,KAAK,CAACC,MAAN,CAAaE,KAAlF;;AACA,cAAKN,QAAL;AACCP,UAAAA,MAAM,EAAEa,KAAK,KAAK,MAAV,GAAmBtB,MAAM,CAACU,WAA1B,GAAwCV,MAAM,CAAC+B;AADxD,WAEEV,IAFF,EAESC,KAFT;AAIA,OAPkB;AAAA,KArEI;;AAAA,UA8EpBU,gBA9EoB,GA8ED,UAACb,KAAD,EAAW;AAC1BA,MAAAA,KAAK,CAACc,cAAN;;AACN,YAAKjB,QAAL,CAAc;AAAEkB,QAAAA,SAAS,EAAC;AAAZ,OAAd;;AAFgC,wBAGmD,MAAKC,KAHxD;AAAA,UAG3BC,EAH2B,eAG3BA,EAH2B;AAAA,UAGvBC,QAHuB,eAGvBA,QAHuB;AAAA,UAGbC,SAHa,eAGbA,SAHa;AAAA,UAGFC,QAHE,eAGFA,QAHE;AAAA,UAGQC,KAHR,eAGQA,KAHR;AAAA,UAGeC,KAHf,eAGeA,KAHf;AAAA,UAGsBC,OAHtB,eAGsBA,OAHtB;AAAA,UAG+BjC,MAH/B,eAG+BA,MAH/B;AAAA,UAGuCmB,QAHvC,eAGuCA,QAHvC;AAIhC,UAAIe,IAAI,GAAG;AAAEN,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,SAAS,EAAEA,SAAjC;AAA4CC,QAAAA,QAAQ,EAAEA,QAAtD;AAAgEC,QAAAA,KAAK,EAAEA,KAAvE;AAA8EC,QAAAA,KAAK,EAAEA,KAArF;AAA4FC,QAAAA,OAAO,EAAEA,OAArG;AAA8GjC,QAAAA,MAAM,EAAEA,MAAtH;AAA8HmB,QAAAA,QAAQ,EAAEA;AAAxI,OAAX;AAJgC,UAM1BX,sBAN0B,GAMC,MAAKkB,KANN,CAM1BlB,sBAN0B;;AAO1B,UAAK,CAACA,sBAAN,EAA8B;AAC3B2B,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD2B,CAEnC;AACS;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAZD,MAYO;AACHvC,QAAAA,IAAI,CAAC,SAAD,EAAY,uBAAZ,EAAqC,OAArC,CAAJ;AAEH;AACJ,KArGmB;;AAEhB,UAAK+B,KAAL,GAAa;AACTE,MAAAA,QAAQ,EAAE,EADD;AAETG,MAAAA,KAAK,EAAE,EAFE;AAGTF,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTG,MAAAA,OAAO,EAAE,EALA;AAMTD,MAAAA,KAAK,EAAE,EANE;AAOTb,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,SAAS,EAAE,IARF;AASlBpB,MAAAA,MAAM,EAAET,MAAM,CAAC+B,aATG;AAUlBe,MAAAA,aAAa,EAAE,MAVG;AAWlBZ,MAAAA,SAAS,EAAE,KAXO;AAYlBjB,MAAAA,sBAAsB,EAAG;AAZP,KAAb;AAFgB;AAgBnB;;;;wCAEkB;AAAA;;AACflB,MAAAA,OAAO,CAAC,MAAD,EAASC,MAAM,CAAC+C,OAAP,GAAiB,IAA1B,EAAgC,IAAhC,CAAP,CAA6CC,IAA7C,CAAkD,UAAAC,GAAG,EAAI;AACrD,YAAIN,IAAI,GAAGM,GAAG,CAACN,IAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACN,IAAhB;;AACA,QAAA,MAAI,CAAC3B,QAAL,CAAc;AACVoB,UAAAA,EAAE,EAAEO,IAAI,CAACP,EAAL,GAAUO,IAAI,CAACP,EAAf,GAAqB,EADf;AAEVC,UAAAA,QAAQ,EAAEM,IAAI,CAACN,QAAL,GAAgBM,IAAI,CAACN,QAArB,GAAgC,EAFhC;AAGVC,UAAAA,SAAS,EAAEK,IAAI,CAACL,SAAL,GAAiBK,IAAI,CAACL,SAAtB,GAAkC,EAHnC;AAIVC,UAAAA,QAAQ,EAAEI,IAAI,CAACJ,QAAL,GAAgBI,IAAI,CAACJ,QAArB,GAAgC,EAJhC;AAKVC,UAAAA,KAAK,EAAEG,IAAI,CAACH,KAAL,GAAaG,IAAI,CAACH,KAAlB,GAA0B,EALvB;AAMVE,UAAAA,OAAO,EAAEC,IAAI,CAACD,OAAL,GAAeC,IAAI,CAACD,OAApB,GAA8B,EAN7B;AAOVD,UAAAA,KAAK,EAAEE,IAAI,CAACF,KAAL,GAAaE,IAAI,CAACF,KAAlB,GAA0B,EAPvB;AAQVK,UAAAA,aAAa,EAAEH,IAAI,CAAClC,MAAL,GAAc,MAAI,CAACD,YAAL,CAAkBmC,IAAI,CAAClC,MAAvB,CAAd,GAA+C,MARpD;AASVoB,UAAAA,SAAS,EAAEc,IAAI,CAACf,QAAL,GAAgB,MAAI,CAACjB,mBAAL,CAAyBgC,IAAI,CAACf,QAA9B,CAAhB,GAA0D;AAT3D,SAAd;AAWH,OAdD;AAgBH;;;6BAoEQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,kBAAD;AAAoB,QAAA,cAAc,EAAE5B,MAAM,CAACkD,cAA3C;AAA2D,QAAA,gBAAgB,EAAE,IAA7E;AAAmF,QAAA,uBAAuB,EAAElD,MAAM,CAACmD,eAAnH;AAAoI,QAAA,eAAe,EAAE,KAArJ;AAA4J,QAAA,eAAe,EAAE,KAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,sEAAT;AACI,QAAA,GAAG,EAAC,EADR;AAEI,oBAAS,sEAFb;AAGI,2BAAgB,sEAHpB;AAII,QAAA,KAAK,EAAC,KAJV;AAKI,QAAA,MAAM,EAAC,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,CADJ,EAaI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,EAcI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdJ,EAgBI;AAAI,QAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,UAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,0BAAJ,CAFJ,CAhBJ,CADJ,EAuBI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAgC;AAAG,QAAA,IAAI,EAAC,kDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2D;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3D,CAAhC,MADJ,EAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAmD,QAAA,IAAI,EAAC,aAAxD;AAAsE,yBAAc,KAApF;AAA0F,yBAAc,GAAxG;AAA4G,yBAAc,KAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAMQ;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAE,KAAKnB,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,QAHtB;AAII,QAAA,QAAQ,EAAE,KAAKnB,YAJnB;AAKI,QAAA,IAAI,EAAC,UALT;AAMI,QAAA,WAAW,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKJ,iBAD5B;AAEI,QAAA,eAAe,EAAE,KAAKqB,KAAL,CAAWD,SAFhC;AAGI,QAAA,SAAS,EAAE;AAACG,UAAAA,QAAQ,EAAG,KAAKF,KAAL,CAAWE;AAAvB,SAHf;AAII,QAAA,eAAe,EAAE;AAACe,UAAAA,QAAQ,EAAC,IAAV;AAAgBC,UAAAA,SAAS,EAAE,CAA3B;AAA6BC,UAAAA,SAAS,EAAC;AAAvC,SAJrB;AAKI,QAAA,kBAAkB,EAAE;AAAEF,UAAAA,QAAQ,EAAE,wBAAZ;AAAsCC,UAAAA,SAAS,EAAE,4BAAjD;AAA8EC,UAAAA,SAAS,EAAE;AAAzF,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ,EAiBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWG,SAHtB;AAII,QAAA,QAAQ,EAAE,KAAKpB,YAJnB;AAKI,QAAA,IAAI,EAAC,WALT;AAMI,QAAA,WAAW,EAAC,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKJ,iBAD5B;AAEI,QAAA,eAAe,EAAE,KAAKqB,KAAL,CAAWD,SAFhC;AAGI,QAAA,SAAS,EAAE;AAACI,UAAAA,SAAS,EAAG,KAAKH,KAAL,CAAWG;AAAxB,SAHf;AAII,QAAA,eAAe,EAAE;AAACc,UAAAA,QAAQ,EAAC,IAAV;AAAgBE,UAAAA,SAAS,EAAC;AAA1B,SAJrB;AAKI,QAAA,kBAAkB,EAAE;AAAEF,UAAAA,QAAQ,EAAE,wBAAZ;AAAsCE,UAAAA,SAAS,EAAE;AAAjD,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAjBJ,EAkCI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWO,OAHtB;AAII,QAAA,QAAQ,EAAE,KAAKxB,YAJnB;AAKI,QAAA,IAAI,EAAC,SALT;AAMI,QAAA,WAAW,EAAC,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKJ,iBAD5B;AAEI,QAAA,eAAe,EAAE,KAAKqB,KAAL,CAAWD,SAFhC;AAGI,QAAA,SAAS,EAAE;AAACQ,UAAAA,OAAO,EAAG,KAAKP,KAAL,CAAWO;AAAtB,SAHf;AAII,QAAA,eAAe,EAAE;AAACU,UAAAA,QAAQ,EAAC,IAAV;AAAgBE,UAAAA,SAAS,EAAC;AAA1B,SAJrB;AAKI,QAAA,kBAAkB,EAAE;AAAEF,UAAAA,QAAQ,EAAE,wBAAZ;AAAsCE,UAAAA,SAAS,EAAE;AAAjD,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAlCJ,EAkDI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWW,aAAX,KAA6B,MAD1C;AAEI,QAAA,QAAQ,EAAE,KAAKhB,YAAL,CAAkB,eAAlB,CAFd;AAGI,QAAA,KAAK,EAAC,MAHV;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,sBAAW,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,EAUI,oBAAC,KAAD;AACI,QAAA,OAAO,EAAE,KAAKK,KAAL,CAAWW,aAAX,KAA6B,QAD1C;AAEI,QAAA,QAAQ,EAAE,KAAKhB,YAAL,CAAkB,eAAlB,CAFd;AAGI,QAAA,KAAK,EAAC,QAHV;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,sBAAW,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CAlDJ,CADJ,EAwFI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWK,KAHtB;AAII,QAAA,QAAQ,EAAE,KAAKtB,YAJnB;AAKI,QAAA,IAAI,EAAC,OALT;AAMI,QAAA,WAAW,EAAC,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKJ,iBAD5B;AAEI,QAAA,eAAe,EAAE,KAAKqB,KAAL,CAAWD,SAFhC;AAGI,QAAA,SAAS,EAAE;AAACM,UAAAA,KAAK,EAAG,KAAKL,KAAL,CAAWK;AAApB,SAHf;AAII,QAAA,eAAe,EAAE;AAACY,UAAAA,QAAQ,EAAC,IAAV;AAAgBZ,UAAAA,KAAK,EAAC;AAAtB,SAJrB;AAKI,QAAA,kBAAkB,EAAE;AAAEY,UAAAA,QAAQ,EAAE,wBAAZ;AAAsCZ,UAAAA,KAAK,EAAE;AAA7C,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAFJ,EAmBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,QAHtB;AAII,QAAA,QAAQ,EAAE,KAAKrB,YAJnB;AAKI,QAAA,IAAI,EAAC,UALT;AAMI,QAAA,WAAW,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKJ,iBAD5B;AAEI,QAAA,eAAe,EAAE,KAAKqB,KAAL,CAAWD,SAFhC;AAGI,QAAA,SAAS,EAAE;AAACK,UAAAA,QAAQ,EAAG,KAAKJ,KAAL,CAAWI;AAAvB,SAHf;AAII,QAAA,eAAe,EAAE;AAACa,UAAAA,QAAQ,EAAC,IAAV;AAAgBE,UAAAA,SAAS,EAAC;AAA1B,SAJrB;AAKI,QAAA,kBAAkB,EAAE;AAAEF,UAAAA,QAAQ,EAAE,wBAAZ;AAAsCE,UAAAA,SAAS,EAAE;AAAjD,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAnBJ,EAoCI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWM,KAHtB;AAII,QAAA,QAAQ,EAAE,KAAKvB,YAJnB;AAKI,QAAA,IAAI,EAAC,OALT;AAMI,QAAA,WAAW,EAAC,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFJ,EAeI,oBAAC,SAAD;AACI,QAAA,iBAAiB,EAAE,KAAKJ,iBAD5B;AAEI,QAAA,eAAe,EAAE,KAAKqB,KAAL,CAAWD,SAFhC;AAGI,QAAA,SAAS,EAAE;AAACO,UAAAA,KAAK,EAAG,KAAKN,KAAL,CAAWM;AAApB,SAHf;AAII,QAAA,eAAe,EAAE;AAACW,UAAAA,QAAQ,EAAC;AAAV,SAJrB;AAKI,QAAA,kBAAkB,EAAE;AAAEA,UAAAA,QAAQ,EAAE,wBAAZ;AAAsCG,UAAAA,MAAM,EAAE,oBAA9C;AAAoED,UAAAA,SAAS,EAAE,sCAA/E;AAAuHD,UAAAA,SAAS,EAAE;AAAlI,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CApCJ,EA4DI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,UAAD;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,UAAU,EAAC,YAFf;AAGI,QAAA,eAAe,EAAC,gBAHpB;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,WAAW,EAAC,OALhB;AAMI,QAAA,UAAU,MANd,CAOI;AACA;AARJ;AASI,QAAA,gBAAgB,MATpB;AAUI,QAAA,YAAY,EAAC,QAVjB;AAWI,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWN,SAXzB;AAYI,QAAA,QAAQ,EAAE,KAAKJ,gBAZnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5DJ,CAxFJ,EAyKI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,WAA9B;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAzKJ,CANR,CAvBJ,CADJ,CAJJ,CADJ,CADA,CADJ;AA0NH;;;;EApUmB7B,S;;AAuUxB,eAAeU,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group'\n// import { Link } from 'react-router-dom';\nimport Validator from 'react-forms-validator';\nimport callApi from './../../utils/apiCaller';\nimport * as config from '../../constants/config';\nimport Button from '@material-ui/core/Button';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2'\nimport Radio from '@material-ui/core/Radio';\nclass MyAccount extends Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            username: '',\n            email: '',\n            firstname: '',\n            lastname: '',\n            address: '',\n            phone: '',\n            birthday: '',\n            startDate: null,\n\t\t\tgender: config.GENDER_FEMALE,\n\t\t\tselectedValue: 'male',\n\t\t\tsubmitted: false,\n\t\t\tisFormValidationErrors : true,\n        }\n    }\n\n    componentDidMount(){\n        callApi('POST', config.API_URL + \"me\", null).then(res => {\n            var data = res.data;\n            console.log(res.data);\n            this.setState({\n                id: data.id ? data.id  : '',\n                username: data.username ? data.username : '',\n                firstname: data.firstname ? data.firstname : '',\n                lastname: data.lastname ? data.lastname : '',\n                email: data.email ? data.email : '',\n                address: data.address ? data.address : '',\n                phone: data.phone ? data.phone : '',\n                selectedValue: data.gender ? this.returnGender(data.gender) : 'male',\n                startDate: data.birthday ? this.convertNumberToDate(data.birthday) : null,\n            });\n        });\n\t\t\n    }\n\n    returnGender = (gender) => {\n\t\treturn gender === config.GENDER_MALE ? 'male' : 'female';\n\t}\n    \n    convertNumberToDate = (date) => {\n\t\t// date => 2018-10-25 15:28:46\n\t\tvar date_time = moment(date, \"YYYY-MM-DD\");\n\t\treturn date_time;\n\t}\n\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n   \t}\n\n    onChangeForm = (event) => {\n        var target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n    }\n\n    handleChangeDate = (date) => {\n\t\tconst valueOfInput = date ? date.format('YYYY-MM-DD H:mm:ss') : null;\n\t\tthis.setState({\n\t\t\tbirthday: valueOfInput,\n\t\t  \tstartDate: date\n\t\t});\n\t}\n\n\thandleChange = name => event => {\n\t\t// Input, checkbox, Radio, Select\n\t\tvar value = event.target.type === 'checkbox'? event.target.checked : event.target.value;\n\t\tthis.setState({\n\t\t\tgender: value === 'male' ? config.GENDER_MALE : config.GENDER_FEMALE,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\t\tthis.setState({ submitted:true });\n\t\tvar {id, username, firstname, lastname, email, phone, address, gender, birthday} = this.state;\n\t\tvar data = { username: username, firstname: firstname, lastname: lastname, email: email, phone: phone, address: address, gender: gender, birthday: birthday };\n\t\t\n\t\tlet { isFormValidationErrors } = this.state;\n        if ( !isFormValidationErrors ){\n           console.log(data);\n\t\t\t// callApi('POST', config.API_URL + \"change-password\", data).then( res => {\n            //     console.log(res);\n            //     if(res){\n            //         if( res.data.status ){\n            //             Swal(' Good job!', res.data.message, 'success')\n            //         } else {\n            //             Swal('Oops...', res.data.message, 'error')\n            //         }\n            //     }\n            // });\n        } else {\n            Swal('Oops...', 'Something went wrong!', 'error')\n\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <CSSTransitionGroup transitionName={config.PAGETRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n                <div className=\"grid simple\">\n                    <div className=\"grid-title no-border\">\n                        <h4>My Account</h4>\n                    </div>\n                    <div className=\"grid-body no-border\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3 col-lg-3 user-profile\">\n                                <div className=\"user-info-wrapper sm\"> \n                                    <div className=\"profile-wrapper1 sm text-center\">\n                                        <img src=\"https://backend.ssllabel.com/images/thumbnails/300_5b3efede24593.jpg\"\n                                            alt=\"\"\n                                            data-src=\"https://backend.ssllabel.com/images/thumbnails/300_5b3efede24593.jpg\"\n                                            data-src-retina=\"https://backend.ssllabel.com/images/thumbnails/300_5b3efede24593.jpg\"\n                                            width=\"200\"\n                                            height=\"200\"/>\n                                        <div className=\"availability-bubble online\"></div>\n                                    </div>\n                                \n                                </div>\n                                <h3 className=\"text-center\">quandv</h3>\n                                <p className=\"text-center\">Quan Duong</p>\n                                \n                                <ul className=\"list-unstyled text-center\">\n                                    <li><p><i className=\"fa fa-map-marker m-r-xs\"></i>   HN</p></li>\n                                    <li><p><i className=\"fa fa-envelope m-r-xs\"></i> quandv.125@gmail.com</p></li>\n                                </ul>\n                                \n                            </div>\n                            <div className=\"col-md-9 col-lg-9 m-t-lg\">\n                                <h4 className=\"bold\">Tài khoản  <a href=\"https://backend.ssllabel.com/admin/users/edit/21\"><i className=\"fa fa-pencil\"></i></a> </h4>\n                                <div className=\"progress progress-xs\">\n                                    <div className=\"progress-bar progress-bar-success\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                    </div>\n                                </div>\n                                    <form noValidate onSubmit={this.handleFormSubmit}>\n                                        <div className=\"col-lg-6 col-md-6\">\n                                            <div className=\"form-group\">\n                                                <label>UserName</label>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    value={this.state.username} \n                                                    onChange={this.onChangeForm} \n                                                    name=\"username\" \n                                                    placeholder=\"username\"/>\n                                                <Validator \n                                                    isValidationError={this.isValidationError}\n                                                    isFormSubmitted={this.state.submitted} \n                                                    reference={{username : this.state.username}}\n                                                    validationRules={{required:true, minLength: 5,maxLength:10}} \n                                                    validationMessages={{ required: \"This field is required\", minLength: \"Not a valid Min length: 5 \",maxLength: \"Not a valid Max length: 10 \"}}/>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label>FirstName</label>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    value={this.state.firstname} \n                                                    onChange={this.onChangeForm} \n                                                    name=\"firstname\" \n                                                    placeholder=\"firstname\"/>\n                                                <Validator \n                                                    isValidationError={this.isValidationError}\n                                                    isFormSubmitted={this.state.submitted} \n                                                    reference={{firstname : this.state.firstname}}\n                                                    validationRules={{required:true, maxLength:50}} \n                                                    validationMessages={{ required: \"This field is required\", maxLength: \"Not a valid Max length: 10 \"}}/>\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label>Address</label>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    value={this.state.address} \n                                                    onChange={this.onChangeForm} \n                                                    name=\"address\" \n                                                    placeholder=\"address\"/>\n                                                <Validator \n                                                    isValidationError={this.isValidationError}\n                                                    isFormSubmitted={this.state.submitted} \n                                                    reference={{address : this.state.address}}\n                                                    validationRules={{required:true, maxLength:50}} \n                                                    validationMessages={{ required: \"This field is required\", maxLength: \"Not a valid Max length: 10 \"}}/>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <span>Male</span>\n                                                <Radio\n                                                    checked={this.state.selectedValue === 'male'}\n                                                    onChange={this.handleChange('selectedValue')}\n                                                    value='male'\n                                                    name=\"gender\"\n                                                    aria-label=\"male\"\n                                                />\n                                                <span>Female</span>\n                                                <Radio\n                                                    checked={this.state.selectedValue === 'female'}\n                                                    onChange={this.handleChange('selectedValue')}\n                                                    value='female'\n                                                    name=\"gender\"\n                                                    aria-label=\"female\"\n                                                />\n                                                    \n                                                {/* <div className=\"gender\">\n                                                    <label>Gender</label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"gender\"\n                                                        value={this.state.gender}\n                                                        onChange={this.onChangeForm}\n                                                    >\n                                                        <option value={config.GENDER_MALE}>Male</option>\n                                                        <option value={config.GENDER_FEMALE}>Female</option>\n                                                        \n                                                    </select>\n                                                \n                                                </div> */}\n                                            </div>\n                                        </div>\n\n                                        {/* ********** */}\n\n                                        <div className=\"col-lg-6 col-md-6\">\n                                            \n                                            <div className=\"form-group\">\n                                                <label>Email</label>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    value={this.state.email} \n                                                    onChange={this.onChangeForm} \n                                                    name=\"email\" \n                                                    placeholder=\"email\"/>\n                                                <Validator \n                                                    isValidationError={this.isValidationError}\n                                                    isFormSubmitted={this.state.submitted} \n                                                    reference={{email : this.state.email}}\n                                                    validationRules={{required:true, email:true}} \n                                                    validationMessages={{ required: \"This field is required\", email: \"Not a valid email\"}}/>\n                                                \n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label>LastName</label>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    value={this.state.lastname} \n                                                    onChange={this.onChangeForm} \n                                                    name=\"lastname\" \n                                                    placeholder=\"lastname\"/>\n                                                <Validator \n                                                    isValidationError={this.isValidationError}\n                                                    isFormSubmitted={this.state.submitted} \n                                                    reference={{lastname : this.state.lastname}}\n                                                    validationRules={{required:true, maxLength:50}} \n                                                    validationMessages={{ required: \"This field is required\", maxLength: \"Not a valid Max length: 10 \"}}/>\n                                                \n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label>Phone (Ex: +84 987654321)</label>\n                                                <div className=\"input-group transparent\">\n                                                    <span className=\"input-group-addon\">\n                                                        (+84)\n                                                    </span>\n                                                    <input \n                                                        type=\"text\" \n                                                        className=\"form-control\" \n                                                        value={this.state.phone} \n                                                        onChange={this.onChangeForm} \n                                                        name=\"phone\" \n                                                        placeholder=\"phone\"/>\n                                                </div>\n                                                \n                                                <Validator \n                                                    isValidationError={this.isValidationError}\n                                                    isFormSubmitted={this.state.submitted} \n                                                    reference={{phone : this.state.phone}}\n                                                    validationRules={{required:true }} \n                                                    validationMessages={{ required: \"This field is required\", number: \"Not a valid number\", maxLength: \"Not a valid Max length: 11 character\", minLength: \"Not a vaild min length is 9 character\"}}/>\n                                                \n                                            </div>\n                                            \n                                            <div className=\"form-group\">\n                                                <label>Birthday</label>\n                                                <DatePicker\n                                                    className=\"form-control\"\n                                                    dateFormat=\"DD-MM-YYYY\"\n                                                    placeholderText=\"Ex: 25-10-2018\"\n                                                    name=\"birthday\" \n                                                    todayButton=\"Today\"\n                                                    withPortal\n                                                    // peekNextMonth\n                                                    // showMonthDropdown\n                                                    showYearDropdown\n                                                    dropdownMode=\"select\"\n                                                    selected={this.state.startDate}\n                                                    onChange={this.handleChangeDate} \n                                                />\n                                                \n                                        </div>\n\n                                            \n                                        </div>\n                                        <div className=\"col-lg-12 col-md-12\">\n                                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\n                                        </div>\n                                    </form>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </CSSTransitionGroup>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default MyAccount;"]},"metadata":{},"sourceType":"module"}