{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n * Get the previous data table data and remove the updated table\n *\n * @param DataTableData The current data table data in state.\n * @param removeTableId The id of the table that has updated.\n *\n * @returns {Object} The previous data table data, less the updated table.\n */\n\n\nvar getPreviousDataTableData = function getPreviousDataTableData(DataTableData, removeTableId) {\n  if ((typeof DataTableData === 'undefined' ? 'undefined' : _typeof(DataTableData)) !== 'object') return {};\n  return Object.keys(DataTableData).filter(function (table) {\n    return table !== removeTableId;\n  }).reduce(function (obj, key) {\n    var prevObj = _extends({}, obj);\n\n    prevObj[key] = DataTableData[key];\n    return prevObj;\n  }, {});\n};\n/**\n * Update Data Table Data\n *\n * Combine the updated table payload with the previous data table data.\n *\n * @param {Object} DataTableData The current data table data in state.\n * @param {Object} tableUpdate The table update payload.\n *\n * @return {Object} The new table data object.\n */\n\n\nvar updateDataTableData = function updateDataTableData(DataTableData, tableUpdate) {\n  return _extends({}, getPreviousDataTableData(DataTableData, tableUpdate.tableId), tableUpdate.tableData);\n};\n\nvar updateState = function updateState(state, action) {\n  return {\n    DataTableData: updateDataTableData(state.DataTableData, action.payload)\n  };\n};\n\nexports.default = updateState;","map":null,"metadata":{},"sourceType":"script"}