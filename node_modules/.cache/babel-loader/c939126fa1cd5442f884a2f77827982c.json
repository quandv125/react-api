{"ast":null,"code":"import * as Types from '../constants/ActionType';\nimport { findIndex } from 'lodash';\nvar initialState = {\n  status: null,\n  customers: null\n};\n\nvar customers = function customers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state);\n\n  switch (action.type) {\n    case Types.FETCH_CUSTOMERS:\n      if (action.customers.status) {\n        state = {\n          status: action.customers.status,\n          customers: action.customers.data\n        };\n      }\n\n      return state;\n\n    case Types.DELETE_CUSTOMERS:\n      var index = findIndex(state.customers, {\n        id: action.id\n      });\n\n      if (index !== -1) {\n        state.customers.splice(index, 1);\n      }\n\n      state = {\n        status: false,\n        customers: state.customers\n      };\n      return state;\n    // case Types.ADD_customers: \n    //     state = { \n    //         status: action.user.status, \n    //         customers: action.user,\n    //         preUser: !action.user.status ? action.userOld : null\n    //     };\n    //     return state;\n\n    case Types.UPDATE_CUSTOMERS:\n      console.log(state);\n      console.log(action); // let {id} = action.user.user; \n      // index = findIndex(state.customers, { id: id });\n      // if (index !== -1) {\n      //     state.customers[index] = action.user.user;\n      // }\n      // state = {\n      //     status: action.user.status,\n      //     customers: action.user\n      // }\n\n      return state;\n    // case Types.GET_USER: \n    //     if (action.user){\n    //         state = {\n    //             userEdit: action.user\n    //         }\n    //     }\n    //     return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default customers;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/reducers/customers.js"],"names":["Types","findIndex","initialState","status","customers","state","action","console","log","type","FETCH_CUSTOMERS","data","DELETE_CUSTOMERS","index","id","splice","UPDATE_CUSTOMERS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,IAAIC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAAnB;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAOC,MAAM,CAACG,IAAd;AACI,SAAKT,KAAK,CAACU,eAAX;AACI,UAAIJ,MAAM,CAACF,SAAP,CAAiBD,MAArB,EAA4B;AACxBE,QAAAA,KAAK,GAAG;AACJF,UAAAA,MAAM,EAAEG,MAAM,CAACF,SAAP,CAAiBD,MADrB;AAEJC,UAAAA,SAAS,EAAEE,MAAM,CAACF,SAAP,CAAiBO;AAFxB,SAAR;AAIH;;AACD,aAAON,KAAP;;AACJ,SAAKL,KAAK,CAACY,gBAAX;AACI,UAAIC,KAAK,GAAGZ,SAAS,CAACI,KAAK,CAACD,SAAP,EAAkB;AAAEU,QAAAA,EAAE,EAAER,MAAM,CAACQ;AAAb,OAAlB,CAArB;;AACA,UAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AAC1BR,QAAAA,KAAK,CAACD,SAAN,CAAgBW,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACS;;AACDR,MAAAA,KAAK,GAAG;AACJF,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,SAAS,EAAEC,KAAK,CAACD;AAFb,OAAR;AAIA,aAAOC,KAAP;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKL,KAAK,CAACgB,gBAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAFA,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAOD,KAAP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOA,KAAP;AAhDR;AAkDH,CApDD;;AAsDA,eAAeD,SAAf","sourcesContent":["import * as Types from '../constants/ActionType';\nimport {findIndex} from 'lodash';\nvar initialState = { status: null, customers: null };\n\nconst customers = (state = initialState, action) => {\n    console.log(state);\n    switch(action.type){\n        case Types.FETCH_CUSTOMERS:\n            if (action.customers.status){\n                state = {\n                    status: action.customers.status, \n                    customers: action.customers.data\n                }\n            }\n            return state;\n        case Types.DELETE_CUSTOMERS:\n            var index = findIndex(state.customers, { id: action.id });\n            if (index !== -1) {\n\t\t\t\tstate.customers.splice(index, 1);\n            }\n            state = {\n                status: false,\n                customers: state.customers\n            }\n            return state;\n        // case Types.ADD_customers: \n            \n        //     state = { \n        //         status: action.user.status, \n        //         customers: action.user,\n        //         preUser: !action.user.status ? action.userOld : null\n        //     };\n        //     return state;\n        case Types.UPDATE_CUSTOMERS:\n        console.log(state);\n        console.log(action);\n            // let {id} = action.user.user; \n            // index = findIndex(state.customers, { id: id });\n            // if (index !== -1) {\n            //     state.customers[index] = action.user.user;\n            // }\n            // state = {\n            //     status: action.user.status,\n            //     customers: action.user\n            // }\n            return state;\n        // case Types.GET_USER: \n        //     if (action.user){\n        //         state = {\n        //             userEdit: action.user\n        //         }\n        //     }\n        //     return state;\n        default: \n            return state;\n    }\n}\n\nexport default customers;"]},"metadata":{},"sourceType":"module"}