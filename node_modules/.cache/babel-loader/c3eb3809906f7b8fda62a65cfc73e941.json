{"ast":null,"code":"import _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Menu/LoginButton.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { actLogoutRequest } from './../../actions/index';\nimport { Redirect } from 'react-router-dom';\n\nvar LoginButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginButton, _Component);\n\n  function LoginButton(props) {\n    var _this;\n\n    _classCallCheck(this, LoginButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginButton).call(this, props));\n    var session = JSON.parse(sessionStorage.getItem('authentication'));\n    _this.state = {\n      isLogin: session.status\n    };\n    _this.showLogout = _this.showLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginButton, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextprops) {\n      this.setState({\n        isLogin: nextprops.authentication.loggedIn\n      });\n    }\n  }, {\n    key: \"showLogout\",\n    value: function showLogout() {\n      var _this2 = this;\n\n      var result = null;\n      var isLogin = this.state.isLogin;\n      console.log(isLogin);\n\n      if (!isLogin) {\n        // isLogin = true => token has data => logout is display and login is hidden \n        result = React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" 123\", React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this2.onLogout();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Logout\"), \" \");\n      } else {\n        // isLogin = false => token is null => logout is hidden and login is display \n        result = React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" 123\", React.createElement(Link, {\n          to: \"/login\",\n          className: \"my-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" Login \"), \" \");\n      }\n\n      return result;\n    }\n  }, {\n    key: \"onLogout\",\n    value: function onLogout() {\n      this.props.onActLogout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogin) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.showLogout());\n    }\n  }]);\n\n  return LoginButton;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authentication: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onActLogout: function onActLogout() {\n      dispatch(actLogoutRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginButton);","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Menu/LoginButton.js"],"names":["React","Component","Link","connect","actLogoutRequest","Redirect","LoginButton","props","session","JSON","parse","sessionStorage","getItem","state","isLogin","status","showLogout","bind","nextprops","setState","authentication","loggedIn","result","console","log","onLogout","onActLogout","pathname","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;IAEMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX,CAAd;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAGN,OAAO,CAACO;AADT,KAAb;AAGA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AANe;AAQlB;;;;8CAEyBC,S,EAAW;AACjC,WAAKC,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAEI,SAAS,CAACE,cAAV,CAAyBC;AADxB,OAAd;AAIH;;;iCAEY;AAAA;;AACT,UAAIC,MAAM,GAAG,IAAb;AADS,UAEHR,OAFG,GAES,KAAKD,KAFd,CAEHC,OAFG;AAGTS,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;;AACA,UAAI,CAACA,OAAL,EAAc;AAAC;AACXQ,QAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAQ;AAAM,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACG,QAAL,EAAN;AAAA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR,MAAT;AACH,OAFD,MAEO;AAAE;AACLH,QAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAQ,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAkB,UAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR,MAAT;AACH;;AACD,aAAOA,MAAP;AACH;;;+BAEU;AACP,WAAKf,KAAL,CAAWmB,WAAX;AACH;;;6BAEQ;AACL,UAAG,KAAKb,KAAL,CAAWC,OAAd,EAAsB;AAClB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEa,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKX,UAAL,EAFL,CADJ;AAOH;;;;EA9CqBf,S;;AAiD1B,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAAAf,KAAK,EAAI;AAE7B,SAAO;AACHO,IAAAA,cAAc,EAAEP,KAAK,CAACO;AADnB,GAAP;AAIH,CAND;;AAQA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWvB,KAAX,EAAqB;AAC5C,SAAO;AACHmB,IAAAA,WAAW,EAAE,uBAAM;AACfI,MAAAA,QAAQ,CAAC1B,gBAAgB,EAAjB,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAOA,eAAeD,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { actLogoutRequest } from './../../actions/index';\nimport {Redirect} from 'react-router-dom';\n\nclass LoginButton extends Component {\n\n    constructor(props) {\n        super(props);\n        let session = JSON.parse(sessionStorage.getItem('authentication'));\n        this.state = {\n            isLogin:  session.status,\n        }\n        this.showLogout = this.showLogout.bind(this);\n         \n    }\n    \n    componentWillReceiveProps(nextprops) {\n        this.setState({\n            isLogin: nextprops.authentication.loggedIn \n        });\n      \n    }\n\n    showLogout() {\n        var result = null;\n        var { isLogin } = this.state;\n        console.log(isLogin);\n        if (!isLogin) {// isLogin = true => token has data => logout is display and login is hidden \n            result = <li> 123<span onClick={() => this.onLogout()} >Logout</span>\t</li>;\n        } else { // isLogin = false => token is null => logout is hidden and login is display \n            result = <li> 123<Link to=\"/login\" className=\"my-link\"> Login\t</Link>\t</li>;\n        }\n        return result;\n    }\n\n    onLogout() {\n        this.props.onActLogout();\n    }\n\n    render() {\n        if(this.state.isLogin){\n            return <Redirect to={{ pathname: \"/\"}}/>;\n        }\n        return (\n            <React.Fragment>\n\n                {this.showLogout()}\n\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n   \n    return {\n        authentication: state.authentication\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onActLogout: () => {\n            dispatch(actLogoutRequest());\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginButton);"]},"metadata":{},"sourceType":"module"}