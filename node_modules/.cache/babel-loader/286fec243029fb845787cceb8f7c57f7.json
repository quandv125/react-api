{"ast":null,"code":"import _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/pages/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport LoginForm from './../../components/Login/LoginForm';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as config from './../../constants/config';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      isLogin: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.authenticate().then(() => {\n      var ele = document.getElementById('ipl-progress-indicator');\n\n      if (ele) {\n        // fade out\n        ele.classList.add('available');\n        setTimeout(function () {\n          // remove from DOM\n          ele.outerHTML = '';\n        }, 2000);\n      } // })\n\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextprops) {\n      if (nextprops.authentication) {\n        this.setState({\n          isLogin: nextprops.authentication\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogin) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(CSSTransitionGroup, {\n        transitionName: config.LOGINTRANSITION,\n        transitionAppear: true,\n        transitionAppearTimeout: config.TRANSITIONSPEED,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-sm-12 col-xs-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authentication: state.authentication.status\n  };\n};\n\nexport default connect(mapStateToProps, null)(Login);","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/pages/Login/Login.js"],"names":["React","Component","CSSTransitionGroup","LoginForm","Redirect","connect","config","Login","props","state","isLogin","ele","document","getElementById","classList","add","setTimeout","outerHTML","nextprops","authentication","setState","pathname","LOGINTRANSITION","TRANSITIONSPEED","mapStateToProps","status"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;;IAEMC,K;;;;;AAED,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFgB;AAKnB;;;;wCACkB;AACrB;AACE,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,CAAZ;;AACA,UAAGF,GAAH,EAAO;AACR;AACAA,QAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,WAAlB;AACAC,QAAAA,UAAU,CAAC,YAAM;AACf;AACAL,UAAAA,GAAG,CAACM,SAAJ,GAAgB,EAAhB;AACD,SAHS,EAGR,IAHQ,CAAV;AAIE,OAVkB,CAWrB;;AACE;;;8CAG0BC,S,EAAW;AACjC,UAAGA,SAAS,CAACC,cAAb,EAA4B;AACxB,aAAKC,QAAL,CAAc;AACVV,UAAAA,OAAO,EAAEQ,SAAS,CAACC;AADT,SAAd;AAGH;AACJ;;;6BAEQ;AACL,UAAG,KAAKV,KAAL,CAAWC,OAAd,EAAsB;AAClB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEW,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACT;;AACK,aACI,oBAAC,kBAAD;AAAoB,QAAA,cAAc,EAAEf,MAAM,CAACgB,eAA3C;AAA4D,QAAA,gBAAgB,EAAE,IAA9E;AAAoF,QAAA,uBAAuB,EAAEhB,MAAM,CAACiB,eAApH;AAAqI,QAAA,eAAe,EAAE,KAAtJ;AAA6J,QAAA,eAAe,EAAE,KAA9K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EA1CetB,S;;AA6CpB,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAf,KAAK,EAAI;AAC7B,SAAO;AACHU,IAAAA,cAAc,EAAEV,KAAK,CAACU,cAAN,CAAqBM;AADlC,GAAP;AAGH,CAJD;;AAKA,eAAepB,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+BjB,KAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nimport LoginForm from './../../components/Login/LoginForm';\nimport {Redirect} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as config from './../../constants/config';\n\nclass Login extends Component {\n\n     constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: false\n        };\n    }\n    componentDidMount(){\n\t\t// this.authenticate().then(() => {\n\t\t  const ele = document.getElementById('ipl-progress-indicator')\n\t\t  if(ele){\n\t\t\t// fade out\n\t\t\tele.classList.add('available')\n\t\t\tsetTimeout(() => {\n\t\t\t  // remove from DOM\n\t\t\t  ele.outerHTML = ''\n\t\t\t},2000)\n\t\t  }\n\t\t// })\n\t  }\n\t\n\n    componentWillReceiveProps(nextprops) {\n        if(nextprops.authentication){\n            this.setState({\n                isLogin: nextprops.authentication \n            });\n        }\n    }\n\n    render() {\n        if(this.state.isLogin){\n            return <Redirect to={{ pathname: \"/\"}}/>;\n\t\t}\n        return (\n            <CSSTransitionGroup transitionName={config.LOGINTRANSITION} transitionAppear={true} transitionAppearTimeout={config.TRANSITIONSPEED} transitionEnter={false} transitionLeave={false}>\n                <div className=\"col-lg-12 col-sm-12 col-xs-12 col-md-12\" >\n                    <LoginForm/>\n                </div>\n            </CSSTransitionGroup>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        authentication: state.authentication.status\n    }\n}\nexport default connect(mapStateToProps, null)(Login);\n"]},"metadata":{},"sourceType":"module"}