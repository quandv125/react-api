{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Login/RegisterForm.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Validator from 'react-forms-validator';\n\nvar RegisterForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterForm).call(this, props));\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSave = function (e) {\n      e.preventDefault();\n      var email = _this.state.email;\n      var data = {\n        email: email\n      };\n\n      if (email !== '' && !_this.state.isFormValidationErrors) {\n        console.log(data);\n      } else {\n        _this.setState({\n          error: true\n        });\n      }\n    };\n\n    _this.isValidationError = function (flag) {\n      _this.setState({\n        isFormValidationErrors: flag\n      });\n    };\n\n    _this.showError = function () {\n      return 'error';\n    };\n\n    _this.state = {\n      email: \"\",\n      error: false\n    };\n    _this.flag = true;\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var error = this.state.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, error && this.showError(), React.createElement(\"form\", {\n        className: \"animated fadeIn validate\",\n        noValidate: true,\n        onSubmit: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.onChangeForm,\n        name: \"email\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          email: this.state.email\n        },\n        validationRules: {\n          required: true,\n          minLength: 5,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          minLength: \"Not a valid Min length: 5 \",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-group col-md-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-cons\",\n        variant: \"contained\",\n        style: styles.buttonLogin,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nvar styles = {};\nstyles.buttonLogin = {\n  fontSize: '14px'\n};\nexport default RegisterForm;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Login/RegisterForm.js"],"names":["React","Component","Button","Validator","RegisterForm","props","onChangeForm","event","target","name","value","type","checked","setState","handleSave","e","preventDefault","email","state","data","isFormValidationErrors","console","log","error","isValidationError","flag","showError","submitted","required","minLength","maxLength","styles","buttonLogin","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Validator from 'react-forms-validator';\n\nclass RegisterForm extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            email: \"\",\n            error: false\n        };\n        this.flag = true;\n    }\n\n    onChangeForm = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked : target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n        });\n\t}\n\n    handleSave = (e) => {\n        e.preventDefault();\n        var {email} = this.state;\n\t\tvar data = { email: email};\n\t\tif(email !== '' && !this.state.isFormValidationErrors){\n            console.log(data);\n\t\t} else {\n\t\t\tthis.setState({\n                error: true\n            });\n\t\t}\n    }\n\n    isValidationError = (flag) => {\n\t\tthis.setState({isFormValidationErrors:flag});\n       }\n       \n    showError = () => {\n        return 'error';\n    }\n\n\n    render() {\n        const {error} = this.state;\n        return (\n            <div>\n                {error && this.showError() }\n                <form className=\"animated fadeIn validate\" noValidate onSubmit={this.handleSave}>\n                    <div className=\"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\">\n                        <div className=\"register-form\">\n                        <input \n                                    type=\"text\" \n                                    value={this.state.email} \n                                    onChange={this.onChangeForm} \n                                    name=\"email\" \n                                    placeholder=\"Email\"/>\n                                <Validator \n                                    isValidationError={this.isValidationError}\n                                    isFormSubmitted={this.state.submitted} \n                                    reference={{email : this.state.email}}\n                                    validationRules={{required: true, minLength: 5,maxLength: 50}} \n                                    validationMessages={{ required: \"This field is required\", minLength: \"Not a valid Min length: 5 \",maxLength: \"Not a valid Max length: 10 \"}}/>\n                            \n                        </div>\n                         \n                    </div>\n                    <div className=\"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\">\n                        <div className=\"control-group col-md-12 text-center\">\n                            \n                            <Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" style={ styles.buttonLogin } color=\"primary\">\n                                Submit\n                            </Button>\n                            \n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst styles = {};\nstyles.buttonLogin = {\n\tfontSize: '14px'\n};\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}