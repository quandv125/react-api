{"ast":null,"code":"import * as Types from '../constants/ActionType';\nimport { findIndex } from 'lodash';\nvar initialState = {\n  status: null,\n  orders: null,\n  order_by_date: null\n};\n\nvar orders = function orders() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.FETCH_ORDERS:\n      if (action.orders.status) {\n        state = {\n          status: action.orders.status,\n          orders: action.orders.data,\n          order_by_date: action.orders.order_by_date\n        };\n      }\n\n      return state;\n\n    case Types.DELETE_ORDERS:\n      var index = findIndex(state.orders, {\n        id: action.id\n      });\n\n      if (index !== -1) {\n        state.orders.splice(index, 1);\n      }\n\n      state = {\n        status: false,\n        orders: state.orders,\n        order_by_date: state.order_by_date\n      };\n      return state;\n\n    case Types.ADD_ORDERS:\n      state = {\n        status: null,\n        orders: null,\n        order_by_date: null\n      };\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default orders;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/reducers/orders.js"],"names":["Types","findIndex","initialState","status","orders","order_by_date","state","action","type","FETCH_ORDERS","data","DELETE_ORDERS","index","id","splice","ADD_ORDERS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,IAAIC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,MAAM,EAAE,IAAxB;AAA+BC,EAAAA,aAAa,EAAE;AAA9C,CAAnB;;AAEA,IAAMD,MAAM,GAAG,SAATA,MAAS,GAAkC;AAAA,MAAjCE,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAE7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,YAAX;AACI,UAAIF,MAAM,CAACH,MAAP,CAAcD,MAAlB,EAAyB;AACrBG,QAAAA,KAAK,GAAG;AACJH,UAAAA,MAAM,EAAEI,MAAM,CAACH,MAAP,CAAcD,MADlB;AAEJC,UAAAA,MAAM,EAAEG,MAAM,CAACH,MAAP,CAAcM,IAFlB;AAGJL,UAAAA,aAAa,EAAEE,MAAM,CAACH,MAAP,CAAcC;AAHzB,SAAR;AAKH;;AACD,aAAOC,KAAP;;AACJ,SAAKN,KAAK,CAACW,aAAX;AACI,UAAIC,KAAK,GAAGX,SAAS,CAACK,KAAK,CAACF,MAAP,EAAe;AAAES,QAAAA,EAAE,EAAEN,MAAM,CAACM;AAAb,OAAf,CAArB;;AACA,UAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;AAC1BN,QAAAA,KAAK,CAACF,MAAN,CAAaU,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AACS;;AACDN,MAAAA,KAAK,GAAG;AACJH,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAFV;AAGJC,QAAAA,aAAa,EAAEC,KAAK,CAACD;AAHjB,OAAR;AAKA,aAAOC,KAAP;;AACJ,SAAKN,KAAK,CAACe,UAAX;AACIT,MAAAA,KAAK,GAAG;AAAEH,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,MAAM,EAAE,IAAxB;AAA+BC,QAAAA,aAAa,EAAE;AAA9C,OAAR;AACA,aAAOC,KAAP;;AACJ;AACI,aAAOA,KAAP;AAzBR;AA2BH,CA7BD;;AA+BA,eAAeF,MAAf","sourcesContent":["import * as Types from '../constants/ActionType';\nimport {findIndex} from 'lodash';\nvar initialState = { status: null, orders: null , order_by_date: null};\n\nconst orders = (state = initialState, action) => {\n   \n    switch(action.type){\n        case Types.FETCH_ORDERS:\n            if (action.orders.status){\n                state = {\n                    status: action.orders.status, \n                    orders: action.orders.data,\n                    order_by_date: action.orders.order_by_date\n                }\n            }\n            return state;\n        case Types.DELETE_ORDERS:\n            var index = findIndex(state.orders, { id: action.id });\n            if (index !== -1) {\n\t\t\t\tstate.orders.splice(index, 1);\n            }\n            state = {\n                status: false,\n                orders: state.orders,\n                order_by_date: state.order_by_date\n            }\n            return state;\n        case Types.ADD_ORDERS:\n            state = { status: null, orders: null , order_by_date: null}\n            return state;\n        default: \n            return state;\n    }\n}\n\nexport default orders;"]},"metadata":{},"sourceType":"module"}