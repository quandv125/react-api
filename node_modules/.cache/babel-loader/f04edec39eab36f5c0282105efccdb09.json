{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Login/LoginForm.js\";\nimport React, { Component } from 'react';\nimport Validator from 'react-forms-validator';\nimport { connect } from 'react-redux'; // import { Redirect } from 'react-router-dom';\n// import './../../App.css';\n\nimport { actLoginRequest } from './../../actions/index';\nimport Button from '@material-ui/core/Button';\nimport { MSG_LOGIN, ISLOGIN } from './../../constants/config';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n    _this.state = {\n      email: '',\n      password: '',\n      loginError: '',\n      messages: MSG_LOGIN,\n      isLogin: ISLOGIN\n    };\n    _this.onSave = _this.onSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeForm = _this.onChangeForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showMessageError = _this.showMessageError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isValidationError = _this.isValidationError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.flag = true;\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextprops) {\n      if (nextprops.authentication.loggedIn === false) {\n        this.setState({\n          loginError: 'false',\n          messages: nextprops.authentication.msg ? nextprops.authentication.msg : this.state.messages\n        });\n      } else {\n        this.setState({\n          isLogin: nextprops.authentication.loggedIn\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if(this.state.isLogin){\n      //     return <Redirect to={{ pathname: \"/\"}}/>;\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.showMessageError(), React.createElement(\"form\", {\n        className: \"animated fadeIn validate\",\n        noValidate: true,\n        onSubmit: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.onChangeForm,\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          email: this.state.email\n        },\n        validationRules: {\n          required: true,\n          minLength: 5,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          minLength: \"Not a valid Min length: 5 \",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.onChangeForm,\n        className: \"form-control\",\n        name: \"password\",\n        placeholder: \"M\\u1EADt kh\\u1EA9u\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          password: this.state.password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-group col-md-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-cons\",\n        variant: \"contained\",\n        style: styles.buttonLogin,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\u0110\\u0103ng nh\\u1EADp\")))));\n    } // end render\n\n  }, {\n    key: \"isValidationError\",\n    value: function isValidationError(flag) {\n      this.setState({\n        isFormValidationErrors: flag\n      });\n    }\n  }, {\n    key: \"onChangeForm\",\n    value: function onChangeForm(event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"onSave\",\n    value: function onSave(event) {\n      event.preventDefault();\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var data = {\n        email: email,\n        password: password\n      };\n\n      if (email !== '' && password !== '' && !this.state.isFormValidationErrors) {\n        this.props.onLogin(data);\n      } else {\n        this.setState({\n          loginError: 'false',\n          messages: MSG_LOGIN\n        });\n      }\n    }\n  }, {\n    key: \"showMessageError\",\n    value: function showMessageError() {\n      if (this.state.loginError && this.state.loginError === 'false') {\n        return React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \" \", this.state.messages, \" \");\n      }\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar styles = {};\nstyles.buttonLogin = {\n  fontSize: '14px'\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authentication: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onLogin: function onLogin(user) {\n      dispatch(actLoginRequest(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Login/LoginForm.js"],"names":["React","Component","Validator","connect","actLoginRequest","Button","MSG_LOGIN","ISLOGIN","LoginForm","props","state","email","password","loginError","messages","isLogin","onSave","bind","onChangeForm","showMessageError","isValidationError","flag","nextprops","authentication","loggedIn","setState","msg","submitted","required","minLength","maxLength","styles","buttonLogin","isFormValidationErrors","event","target","name","value","type","checked","preventDefault","data","onLogin","fontSize","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Validator from 'react-forms-validator';\nimport { connect } from 'react-redux';\n// import { Redirect } from 'react-router-dom';\n// import './../../App.css';\nimport { actLoginRequest } from './../../actions/index';\nimport Button from '@material-ui/core/Button';\n\nimport { MSG_LOGIN, ISLOGIN } from './../../constants/config';\n\nclass LoginForm extends Component {\n    constructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tloginError: '',\n\t\t\tmessages: MSG_LOGIN,\n\t\t\tisLogin: ISLOGIN,\n\t\t};\n\t\t\n\t\tthis.onSave = this.onSave.bind(this);\n\t\tthis.onChangeForm = this.onChangeForm.bind(this);\n\t\tthis.showMessageError = this.showMessageError.bind(this);\n\t\tthis.isValidationError = this.isValidationError.bind(this);\n\t\tthis.flag = true;\n\t}\n\n\tcomponentWillReceiveProps(nextprops){\n\t\tif(nextprops.authentication.loggedIn === false){\n\t\t\tthis.setState({ \n\t\t\t\tloginError: 'false',\n\t\t\t\tmessages: nextprops.authentication.msg ? nextprops.authentication.msg : this.state.messages\n\t\t\t });\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisLogin: nextprops.authentication.loggedIn,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\t// if(this.state.isLogin){\n        //     return <Redirect to={{ pathname: \"/\"}}/>;\n\t\t// }\n\t\t\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t\t{this.showMessageError()}\n\t\t\t\t\n\t\t\t\t\t<form className=\"animated fadeIn validate\" noValidate onSubmit={this.onSave}>\n\t\t\t\t\t\t<div className=\"row form-row m-l-20 m-r-20 xs-m-l-10 xs-m-r-10\">\n\t\t\t\t\t\t\t<div className=\"col-md-6 col-sm-6\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.email} \n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"/>\n\t\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\t\treference={{email : this.state.email}}\n\t\t\t\t\t\t\t\t\t\tvalidationRules={{required: true, minLength: 5,maxLength: 50}} \n\t\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"This field is required\", minLength: \"Not a valid Min length: 5 \",maxLength: \"Not a valid Max length: 10 \"}}/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"col-md-6 col-sm-6\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Mật khẩu\"/>\n\t\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\t\treference={{password : this.state.password}}\n\t\t\t\t\t\t\t\t\t\tvalidationRules={{required: true, maxLength: 50}} \n\t\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"This field is required\", maxLength: \"Not a valid Max length: 10 \"}}/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row p-t-12 m-l-20 m-r-20 xs-m-l-12 xs-m-r-12\">\n\t\t\t\t\t\t\t<div className=\"control-group col-md-12 text-center\">\n\t\t\t\t\t\t\t\t{/* <div className=\"checkbox checkbox check-success \"> */}\n\t\t\t\t\t\t\t\t\t{/* <a href=\"#\">Trouble login in?</a>&nbsp;&nbsp; */}\n\t\t\t\t\t\t\t\t\t{/* <input id=\"checkbox1\" type=\"checkbox\" value=\"1\"/>\n\t\t\t\t\t\t\t\t\t<label >Keep me reminded</label> */}\n\t\t\t\t\t\t\t\t{/* </div> */}\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" className=\"btn btn-primary btn-cons\" variant=\"contained\" style={ styles.buttonLogin } color=\"primary\">\n\t\t\t\t\t\t\t\t\tĐăng nhập\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t);\n\t} // end render\n\n\tisValidationError(flag){\n\t\tthis.setState({isFormValidationErrors:flag});\n   \t}\n\n\tonChangeForm (event) {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked : target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n        });\n\t}\n\n\tonSave (event) {\n\t\tevent.preventDefault();\n\t\tvar {email, password} = this.state;\n\t\tvar data = { email: email, password: password};\n\t\tif(email !== '' && password !== '' && !this.state.isFormValidationErrors){\n\t\t\tthis.props.onLogin(data);\n\t\t} else {\n\t\t\tthis.setState({ loginError: 'false', messages: MSG_LOGIN });\n\t\t}\n\t}\n\n\tshowMessageError() {\n\t\tif( this.state.loginError && this.state.loginError === 'false' ) {\n\t\t\treturn \t<div className=\"alert alert-danger\"> {this.state.messages} </div>;\n\t\t}\n\t}\n\t\n}\n\nconst styles = {};\nstyles.buttonLogin = {\n\tfontSize: '14px'\n};\n  \nconst mapStateToProps = state => {\n\treturn {\n\t\tauthentication: state.authentication\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonLogin : (user) => {\n\t\t\tdispatch(actLoginRequest(user));\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}