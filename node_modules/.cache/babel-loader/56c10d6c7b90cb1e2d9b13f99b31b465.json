{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactBootstrapTableNext = require('react-bootstrap-table-next');\n\nvar _reactBootstrapTableNext2 = _interopRequireDefault(_reactBootstrapTableNext);\n\nvar _reactBootstrapTable2Paginator = require('react-bootstrap-table2-paginator');\n\nvar _reactBootstrapTable2Paginator2 = _interopRequireDefault(_reactBootstrapTable2Paginator);\n\nvar _reactBootstrapTable2Filter = require('react-bootstrap-table2-filter');\n\nvar _reactBootstrapTable2Filter2 = _interopRequireDefault(_reactBootstrapTable2Filter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DataTable = function (_React$Component) {\n  _inherits(DataTable, _React$Component);\n\n  function DataTable(props) {\n    _classCallCheck(this, DataTable);\n\n    var _this = _possibleConstructorReturn(this, (DataTable.__proto__ || Object.getPrototypeOf(DataTable)).call(this, props));\n\n    _this.menuButtonClass = function () {\n      return {\n        className: 'table-button table-button-menu-item'\n      };\n    };\n\n    _this.startClearingAllFilters = function () {\n      _this.props.startClearingFilters();\n\n      _this.setState({\n        clearFilters: true\n      });\n    };\n\n    _this.clearAllFilters = function () {\n      Object.values(_this.props.tableColumns).filter(function (filter) {\n        return filter.column.searchable !== false;\n      }).forEach(function (filter) {\n        filter.resetDefault();\n\n        _this.colRef[filter.column.key](filter.getDefault());\n      });\n\n      _this.setState({\n        clearFilters: false\n      });\n\n      _this.props.clearFilters();\n    };\n\n    _this.toggleFilters = function () {\n      _this.setState({\n        showFilters: !_this.state.showFilters\n      });\n    };\n\n    _this.renderExportCSVButton = function () {\n      return _react2.default.createElement('div', _extends({}, _this.menuButtonClass(), {\n        onClick: function onClick() {\n          return _this.props.onExportToCSV();\n        }\n      }), _react2.default.createElement('span', {\n        className: 'export-icon'\n      }, _react2.default.createElement('b', null)), 'Export');\n    };\n\n    _this.renderCustomButtonGroup = function () {\n      var filtersType = 'hidden';\n\n      if (_this.state.showFilters) {\n        if (_this.props.isFiltered) {\n          filtersType = 'filtered';\n        } else {\n          filtersType = 'shown';\n        }\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'table-button-menu'\n      }, _react2.default.createElement('button', _extends({}, _this.menuButtonClass(), {\n        onClick: function onClick() {\n          return _this.props.refreshTable();\n        }\n      }), _react2.default.createElement('span', {\n        className: 'refresh-icon'\n      }, _react2.default.createElement('b', null))), filtersType === 'shown' && _react2.default.createElement('button', _extends({}, _this.menuButtonClass(), {\n        onClick: function onClick() {\n          return _this.toggleFilters();\n        }\n      }), _react2.default.createElement('span', {\n        className: 'filter-icon filter-icon-shown'\n      }, _react2.default.createElement('b', null)), 'Filter'), filtersType === 'filtered' && _react2.default.createElement('button', _extends({}, _this.menuButtonClass(), {\n        onClick: function onClick() {\n          return _this.startClearingAllFilters();\n        }\n      }), _react2.default.createElement('span', {\n        className: 'filter-icon filter-icon-clear'\n      }, _react2.default.createElement('b', null)), 'Clear Filters'), filtersType === 'hidden' && _react2.default.createElement('button', _extends({}, _this.menuButtonClass(), {\n        onClick: function onClick() {\n          return _this.toggleFilters();\n        }\n      }), _react2.default.createElement('span', {\n        className: 'filter-icon'\n      }, _react2.default.createElement('b', null)), 'Filter'), _this.renderExportCSVButton(), _this.props.extraButtons && _this.props.extraButtons());\n    };\n\n    _this.renderSearchBox = function () {\n      return _react2.default.createElement('div', {\n        className: 'form-group form-group-sm react-bs-table-search-form'\n      }, _react2.default.createElement('input', {\n        type: 'text',\n        defaultValue: _this.props.searchValue,\n        placeholder: 'Search',\n        onChange: _this.props.onSearchChange\n      }), _react2.default.createElement('span', {\n        className: 'input-group-btn'\n      }));\n    };\n\n    _this.renderToolBar = function () {\n      return _react2.default.createElement('div', {\n        className: 'react-bs-table-tool-bar'\n      }, _react2.default.createElement('div', {\n        className: 'row'\n      }, _react2.default.createElement('div', {\n        className: 'col-xs-6 col-sm-6 col-md-6 col-lg-8'\n      }, _this.renderCustomButtonGroup()), _react2.default.createElement('div', {\n        className: 'col-xs-6 col-sm-6 col-md-6 col-lg-4'\n      }, _this.renderSearchBox())));\n    };\n\n    _this.renderShowsTotal = function (start, to, total) {\n      return _react2.default.createElement('div', {\n        style: {\n          float: 'right',\n          fontSize: '10px',\n          marginTop: '4px',\n          marginRight: '-66px'\n        }\n      }, 'Showing ', start, ' to ', Math.max(to + 1, 0), ' of ', total, ' Results');\n    };\n\n    _this.state = {\n      showFilters: _this.props.isFiltered,\n      clearFilters: false\n    };\n    _this.colRef = {};\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextState.clearFilters) this.clearAllFilters();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          keyField = _props.keyField,\n          noDataIndication = _props.noDataIndication,\n          defaultSort = _props.defaultSort,\n          tableColumns = _props.tableColumns,\n          tableData = _props.tableData,\n          dataTotalSize = _props.dataTotalSize,\n          onTableChange = _props.onTableChange,\n          onSizePerPageChange = _props.onSizePerPageChange,\n          currentPage = _props.currentPage,\n          sizePerPage = _props.sizePerPage; // Add sort options\n\n      var defaultSortOptions = null;\n\n      if (defaultSort) {\n        defaultSortOptions = [{\n          dataField: defaultSort[0],\n          order: defaultSort[1].toLowerCase()\n        }];\n      } // Add pagination options\n\n\n      var paginationOptions = {\n        paginationTotalRenderer: this.renderShowsTotal,\n        showTotal: true,\n        page: currentPage,\n        sizePerPage: sizePerPage,\n        sizePerPageList: [10, 25, 50, 100],\n        onSizePerPageChange: onSizePerPageChange,\n        totalSize: dataTotalSize\n      };\n      var columns = Object.values(tableColumns).map(function (tableColumn) {\n        // set column filter, if searchable\n        var columnFilter = void 0;\n        var filterRenderer = void 0;\n\n        if (tableColumn.column.searchable !== false) {\n          var defaultValue = tableColumn.getBaseDefault();\n          if (tableColumn.column.defaultValue) defaultValue = tableColumn.column.defaultValue;\n\n          var filterOptions = _extends({}, tableColumn.getColumnFilterProps(defaultValue), {\n            getFilter: function getFilter(c) {\n              _this2.colRef[tableColumn.column.key] = c;\n            }\n          });\n\n          if (filterOptions.type === 'TextFilter') {\n            columnFilter = (0, _reactBootstrapTable2Filter.textFilter)(filterOptions);\n          }\n\n          if (filterOptions.type === 'SelectFilter') {\n            columnFilter = (0, _reactBootstrapTable2Filter.selectFilter)(filterOptions);\n          }\n\n          if (filterOptions.type === 'NumberFilter') {\n            columnFilter = (0, _reactBootstrapTable2Filter.numberFilter)(filterOptions);\n          }\n\n          if (filterOptions.type === 'CustomFilter') {\n            columnFilter = (0, _reactBootstrapTable2Filter.customFilter)();\n\n            filterRenderer = function filterRenderer(onFilter) {\n              return tableColumn.getCustomFilter(onFilter, filterOptions);\n            };\n          }\n        }\n\n        return _extends({\n          dataField: tableColumn.column.key,\n          text: tableColumn.column.title,\n          sort: !(tableColumn.column.sortable === false),\n          filter: columnFilter\n        }, filterRenderer && {\n          filterRenderer: filterRenderer\n        }, {\n          headerClasses: '' + (_this2.state.showFilters ? '' : 'hide-filter'),\n          hidden: tableColumn.column.hidden\n        }, tableColumn.column.width && {\n          headerStyle: {\n            width: tableColumn.column.width.toString() + 'px'\n          }\n        }, tableColumn.column.width && {\n          style: {\n            width: tableColumn.column.width.toString() + 'px'\n          }\n        }, tableColumn.column.dataFormat && {\n          formatter: tableColumn.column.dataFormat\n        }, tableColumn.column.formatExtraData && {\n          formatExtraData: tableColumn.column.formatExtraData\n        });\n      });\n      return _react2.default.createElement('div', {\n        style: {\n          position: 'relative'\n        }\n      }, this.renderToolBar(), _react2.default.createElement(_reactBootstrapTableNext2.default, {\n        remote: {\n          pagination: true\n        },\n        keyField: keyField,\n        data: tableData || [],\n        columns: columns,\n        defaultSorted: defaultSortOptions,\n        striped: true,\n        hover: true,\n        pagination: (0, _reactBootstrapTable2Paginator2.default)(paginationOptions),\n        onTableChange: onTableChange,\n        noDataIndication: noDataIndication,\n        filter: (0, _reactBootstrapTable2Filter2.default)()\n      }));\n    }\n  }]);\n\n  return DataTable;\n}(_react2.default.Component);\n\nDataTable.propTypes = {\n  keyField: _propTypes2.default.string.isRequired,\n  noDataIndication: _propTypes2.default.any,\n  extraButtons: _propTypes2.default.func,\n  defaultSort: _propTypes2.default.array,\n  tableColumns: _propTypes2.default.object.isRequired,\n  tableData: _propTypes2.default.any,\n  dataTotalSize: _propTypes2.default.number.isRequired,\n  onTableChange: _propTypes2.default.func.isRequired,\n  onSizePerPageChange: _propTypes2.default.func.isRequired,\n  onSearchChange: _propTypes2.default.func.isRequired,\n  onExportToCSV: _propTypes2.default.func.isRequired,\n  currentPage: _propTypes2.default.number.isRequired,\n  sizePerPage: _propTypes2.default.number.isRequired,\n  refreshTable: _propTypes2.default.func.isRequired,\n  searchValue: _propTypes2.default.string,\n  startClearingFilters: _propTypes2.default.func.isRequired,\n  clearFilters: _propTypes2.default.func.isRequired,\n  isFiltered: _propTypes2.default.bool\n};\nDataTable.defaultProps = {\n  noDataIndication: 'There is no data to display',\n  extraButtons: null,\n  defaultSort: null,\n  tableData: null,\n  searchValue: undefined,\n  isFiltered: false\n};\nexports.default = DataTable;","map":null,"metadata":{},"sourceType":"script"}