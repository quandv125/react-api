{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Customers/ModalCalling.js\";\nimport React, { Component } from 'react';\nimport { CallingIO } from '../../socketIO/client';\nimport Modal from 'react-responsive-modal';\nimport Button from '@material-ui/core/Button';\nimport callApi from './../../utils/apiCaller';\nimport * as config from '../../constants/config';\n\nvar ModalCalling =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalCalling, _Component);\n\n  function ModalCalling(props) {\n    var _this;\n\n    _classCallCheck(this, ModalCalling);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalCalling).call(this, props));\n\n    _this.onChangeForm = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onOpenModal = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleEventCustomerCalling = function () {\n      var _this$state = _this.state,\n          customer = _this$state.customer,\n          customer_id = _this$state.customer_id,\n          customernumber = _this$state.customernumber,\n          note = _this$state.note;\n      var data = {\n        customer_id: customer_id,\n        customer: customer,\n        customernumber: customernumber,\n        note: note\n      };\n      callApi('POST', config.CRMWORLDFONE_URL, data).then(function (res) {\n        if (res.data.id) {\n          Swal('Good job!', 'You clicked the button!', 'success');\n        } else {\n          Swal('Oops...', 'Your phone not incorrect format!', 'error');\n        }\n      });\n    };\n\n    _this.state = {\n      note: '',\n      open: false,\n      customer_id: null,\n      customer: '',\n      customernumber: ''\n    };\n    CallingIO(function (message) {\n      _this.setState({\n        customer_id: 98,\n        customer: 'Quan Duong',\n        customernumber: '84976459551'\n      });\n\n      console.log(message); // let user = message.data.power.username;\n\n      _this.onOpenModal();\n    });\n    return _this;\n  }\n\n  _createClass(ModalCalling, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          customer = _this$state2.customer,\n          customernumber = _this$state2.customernumber;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Customer: \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", customer, \" - \", customernumber)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"note\",\n        onChange: this.onChangeForm,\n        className: \"form-control\",\n        cols: \"80\",\n        rows: \"5\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleEventCustomerCalling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Save \", React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"done_all\"), \" \")));\n    }\n  }]);\n\n  return ModalCalling;\n}(Component);\n\nexport default ModalCalling;","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Customers/ModalCalling.js"],"names":["React","Component","CallingIO","Modal","Button","callApi","config","ModalCalling","props","onChangeForm","event","target","name","value","type","checked","setState","onOpenModal","open","onCloseModal","handleEventCustomerCalling","state","customer","customer_id","customernumber","note","data","CRMWORLDFONE_URL","then","res","id","Swal","message","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CallingIO } from '../../socketIO/client';\nimport Modal from 'react-responsive-modal';\nimport Button from '@material-ui/core/Button';\nimport callApi from './../../utils/apiCaller';\nimport * as config from '../../constants/config';\n\nclass ModalCalling extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnote: '',\n            open: false,\n            customer_id: null,\n            customer: '',\n            customernumber: ''\n            \n\t\t}\n\t\tCallingIO(message => {\n            this.setState({\n                customer_id: 98,\n                customer: 'Quan Duong',\n                customernumber: '84976459551'\n            });\n\t\t\tconsole.log(message)\n\t\t\t// let user = message.data.power.username;\n\t\t\tthis.onOpenModal();\n\t\t});\n    }\n    onChangeForm = (event) => {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\tonOpenModal = () => {\n\t\tthis.setState({ open: true });\n\t};\n\t\n\tonCloseModal = () => {\n\t\tthis.setState({ open: false });\n\t};\n\n\thandleEventCustomerCalling = () => {\n        var {customer, customer_id, customernumber, note} = this.state;\n        var data = {customer_id: customer_id, customer: customer, customernumber: customernumber, note: note}\n\t\tcallApi('POST', config.CRMWORLDFONE_URL, data).then(res => {\n            if(res.data.id) {\n                Swal( 'Good job!', 'You clicked the button!', 'success')\n            } else {\n                Swal( 'Oops...', 'Your phone not incorrect format!', 'error')\n            }\n        });\n\t}\n    render() {\n        var {customer, customernumber} = this.state;\n        return (\n            <div>\n                <Modal open={this.state.open} onClose={this.onCloseModal} center>\n\t\t\t\t\t<h2>Customer: <strong> {customer} - {customernumber}</strong></h2>\n\t\t\t\t\t\t<div className=\"form-group\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<textarea name=\"note\" onChange={this.onChangeForm}  className=\"form-control\" cols=\"80\" rows=\"5\" required=\"required\"></textarea>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button variant=\"contained\"  color=\"secondary\" onClick={this.handleEventCustomerCalling}>Save <i className=\"material-icons\">done_all</i> </Button>\n\t\t\t\t</Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalCalling;"]},"metadata":{},"sourceType":"module"}