{"ast":null,"code":"import _defineProperty from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/Data/React/react-api/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/Data/React/react-api/src/components/Login/LoginForm.js\";\nimport React, { Component } from 'react';\nimport Validator from 'react-forms-validator';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './../../App.css';\nimport { actLoginRequest } from './../../actions/index';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\n\nvar UserAddPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserAddPage, _Component);\n\n  function UserAddPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserAddPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserAddPage).call(this, props));\n    var session = JSON.parse(sessionStorage.getItem('authentication'));\n    _this.state = {\n      email: '',\n      password: '',\n      loginError: '',\n      isLogin: session && session.status ? session.status : false,\n      loginAuth: _this.props.authentication\n    };\n    _this.onSave = _this.onSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeForm = _this.onChangeForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showMessageError = _this.showMessageError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isValidationError = _this.isValidationError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.flag = true;\n    return _this;\n  }\n\n  _createClass(UserAddPage, [{\n    key: \"isValidationError\",\n    value: function isValidationError(flag) {\n      this.setState({\n        isFormValidationErrors: flag\n      });\n    }\n  }, {\n    key: \"onChangeForm\",\n    value: function onChangeForm(event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"onSave\",\n    value: function onSave(event) {\n      event.preventDefault();\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var data = {\n        email: email,\n        password: password\n      };\n\n      if (email !== '' && password !== '' && !this.state.isFormValidationErrors) {\n        this.props.onLogin(data);\n      } else {\n        this.setState({\n          loginError: 'false'\n        });\n      }\n    }\n  }, {\n    key: \"showMessageError\",\n    value: function showMessageError() {\n      if (this.state.loginError && this.state.loginError === 'false') {\n        return React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Erorr!\"), \" Incorrect username/ password please try again.\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextprops) {\n      this.setState({\n        isLogin: nextprops.authentication.loggedIn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLogin) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.showMessageError(), React.createElement(\"div\", {\n        className: \"div-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imgcontainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.onChangeForm,\n        name: \"email\",\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          email: this.state.email\n        },\n        validationRules: {\n          required: true,\n          minLength: 5,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          minLength: \"Not a valid Min length: 5 \",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.onChangeForm,\n        name: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Validator, {\n        isValidationError: this.isValidationError,\n        isFormSubmitted: this.state.submitted,\n        reference: {\n          password: this.state.password\n        },\n        validationRules: {\n          required: true,\n          maxLength: 50\n        },\n        validationMessages: {\n          required: \"This field is required\",\n          maxLength: \"Not a valid Max length: 10 \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"send\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })))));\n    } // end render\n\n  }]);\n\n  return UserAddPage;\n}(Component);\n\nvar styles = {};\nstyles.buttonLogin = {\n  fontSize: '13px'\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authentication: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onLogin: function onLogin(user) {\n      dispatch(actLoginRequest(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddPage);","map":{"version":3,"sources":["/Volumes/Data/React/react-api/src/components/Login/LoginForm.js"],"names":["React","Component","Validator","connect","Redirect","actLoginRequest","Button","withStyles","Icon","SaveIcon","UserAddPage","props","session","JSON","parse","sessionStorage","getItem","state","email","password","loginError","isLogin","status","loginAuth","authentication","onSave","bind","onChangeForm","showMessageError","isValidationError","flag","setState","isFormValidationErrors","event","target","name","value","type","checked","preventDefault","data","onLogin","nextprops","loggedIn","pathname","submitted","required","minLength","maxLength","styles","buttonLogin","fontSize","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Validator from 'react-forms-validator';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './../../App.css';\nimport { actLoginRequest } from './../../actions/index';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\n\nclass UserAddPage extends Component {\n    constructor(props){\n\t\tsuper(props);\n\t\tlet session = JSON.parse(sessionStorage.getItem('authentication'));\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tloginError: '',\n\t\t\tisLogin: (session && session.status) ? session.status : false,\n\t\t\tloginAuth: this.props.authentication\n\t\t};\n\t\tthis.onSave = this.onSave.bind(this);\n\t\tthis.onChangeForm = this.onChangeForm.bind(this);\n\t\tthis.showMessageError = this.showMessageError.bind(this);\n\t\tthis.isValidationError = this.isValidationError.bind(this);\n\t\tthis.flag= true;\n\t}\n\t\n\tisValidationError(flag){\n\t\tthis.setState({isFormValidationErrors:flag});\n   \t}\n\n\tonChangeForm (event) {\n\t\tvar target = event.target;\n\t\tvar name = target.name;\n\t\tvar value = target.type === 'checkbox'? target.checked:target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n        });\n\t}\n\n\tonSave (event) {\n\t\tevent.preventDefault();\n\t\tvar {email, password} = this.state;\n\t\tvar data = { email: email, password: password};\n\t\tif(email !== '' && password !== '' && !this.state.isFormValidationErrors){\n\t\t\tthis.props.onLogin(data);\n\t\t} else {\n\t\t\tthis.setState({ loginError: 'false' });\n\t\t}\n\t}\n\n\tshowMessageError() {\n\t\tif(this.state.loginError && this.state.loginError === 'false') {\n\t\t\treturn \t<div className=\"alert alert-danger\">\n\t\t\t\t\t\t<strong>Erorr!</strong> Incorrect username/ password please try again.\t\n\t\t\t\t\t</div>;\n\t\t} \n\t\t\n\t}\n\t\n\tcomponentWillReceiveProps(nextprops){\n\t\tthis.setState({\n            isLogin: nextprops.authentication.loggedIn \n\t\t});\n\t}\n\t\n\trender() {\n\t\tif(this.state.isLogin){\n            return <Redirect to={{ pathname: \"/\"}}/>;\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.showMessageError()}\n\t\t\t\t<div className=\"div-center\">\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<form noValidate onSubmit={this.onSave}>\n\t\t\t\t\t\t\t<div className=\"imgcontainer\">\n\t\t\t\t\t\t\t\t<h3>Login</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\tvalue={this.state.email} \n\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm} \n\t\t\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"/>\n\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\treference={{email : this.state.email}}\n\t\t\t\t\t\t\t\t\tvalidationRules={{required: true, minLength: 5,maxLength: 50}} \n\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"This field is required\", minLength: \"Not a valid Min length: 5 \",maxLength: \"Not a valid Max length: 10 \"}}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\t\t\t\tonChange={this.onChangeForm} \n\t\t\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"/>\n\t\t\t\t\t\t\t\t<Validator \n\t\t\t\t\t\t\t\t\tisValidationError={this.isValidationError}\n\t\t\t\t\t\t\t\t\tisFormSubmitted={this.state.submitted} \n\t\t\t\t\t\t\t\t\treference={{password : this.state.password}}\n\t\t\t\t\t\t\t\t\tvalidationRules={{required: true, maxLength: 50}} \n\t\t\t\t\t\t\t\t\tvalidationMessages={{ required: \"This field is required\", maxLength: \"Not a valid Max length: 10 \"}}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center\">\n\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"contained\" size=\"large\" \t color=\"primary\">\n\t\t\t\t\t\t\t\t\t<Icon>send</Icon>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t{/* <label>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\"/> Remember me\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span className=\"forgot-password\">Forgot password?</span>\n\t\t\t\t\t\t */}\n\t\t\t\t\t\t</form>\n\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} // end render\n\t\n}\n\nconst styles = {};\nstyles.buttonLogin = {\n\tfontSize: '13px'\n};\n  \n  \n\nconst mapStateToProps = state => {\n\treturn {\n\t\tauthentication: state.authentication\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonLogin : (user) => {\n\t\t\tdispatch(actLoginRequest(user));\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddPage);"]},"metadata":{},"sourceType":"module"}